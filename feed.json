{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hello",
    "description": "",
    "home_page_url": "https://liukplus.github.io.com",
    "items": [
        {
            "id": "https://liukplus.github.io.com/2024/02/06/leetcode-weekly-contest383/",
            "url": "https://liukplus.github.io.com/2024/02/06/leetcode-weekly-contest383/",
            "title": "leetcode-weekly-contest383",
            "date_published": "2024-02-06T05:22:29.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code> <br>\n2455 / 22688</p>\n<h1 id=\"第383场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第383场周赛\">#</a> <a href=\"https://leetcode.cn/contest/weekly-contest-383/\">第 383 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"\">3028. 边界上的蚂蚁</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>模拟</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">returnToBoundaryCount</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> loc = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</span><br><span class=\"line\">            loc += i;</span><br><span class=\"line\">            ans += loc==<span class=\"number\">0</span>?<span class=\"number\">1</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-time-to-revert-word-to-initial-state-i/\">3029. 将单词恢复初始状态所需的最短时间 I</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>脑筋急转弯 + Z 算法</p>\n<p>记字符串 word 长度为 n，i 次操作可以将字符串还原成初始状态的充要条件是 word 后缀 word [ixk,n-1] 等于 word 前缀 word [0,n-1-ixk]，因为移除后添加到字符串末尾的 ixk 个字符可以是任意字符，令这 ixk 个字符等于 word 末尾 ixk 个字符即可。现在问题就变成寻找每个 word 后缀能匹配的最长 word 前缀长度。前缀后缀匹配就要用到扩展 kmp 算法也就是 Z 算法。Z 算法可视化具体可以看<a href=\"https://personal.utdallas.edu/~besp/demo/John2010/z-algorithm.htm\"> Z 算法可视化</a></p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minimumTimeToInitialState</span><span class=\"params\">(String word, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> left = -<span class=\"number\">1</span>, right = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = word.length();</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] z = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">        <span class=\"comment\">// [0,right-left]         [left...i.right]</span></span><br><span class=\"line\">        <span class=\"comment\">//    i-left                      i</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i&lt;=right)&#123;</span><br><span class=\"line\">                z[i] = Math.min(right-i+<span class=\"number\">1</span>,z[i-left]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;z[i]+i&lt;n &amp;&amp; word.charAt(z[i]+i)==word.charAt(z[i]);z[i]++)&#123;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(z[i] != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                left = i;</span><br><span class=\"line\">                right = i+z[i]-<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i%k == <span class=\"number\">0</span> &amp;&amp; z[i]==n-i)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> i/k;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (n-<span class=\"number\">1</span>)/k+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/find-the-grid-of-region-average/\">3030. 找出网格的区域平均强度</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>模拟</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[][] resultGrid(<span class=\"keyword\">int</span>[][] a, <span class=\"keyword\">int</span> threshold) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m = a.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = a[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] result = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m][n];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] cnt = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m][n];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">            next:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">2</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 检查左右相邻格子</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x = i - <span class=\"number\">2</span>; x &lt;= i; x++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (Math.abs(a[x][j - <span class=\"number\">2</span>] - a[x][j - <span class=\"number\">1</span>]) &gt; threshold || Math.abs(a[x][j - <span class=\"number\">1</span>] - a[x][j]) &gt; threshold) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span> next; <span class=\"comment\">// 不合法，下一个</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 检查上下相邻格子</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> y = j - <span class=\"number\">2</span>; y &lt;= j; ++y) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (Math.abs(a[i - <span class=\"number\">2</span>][y] - a[i - <span class=\"number\">1</span>][y]) &gt; threshold || Math.abs(a[i - <span class=\"number\">1</span>][y] - a[i][y]) &gt; threshold) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span> next; <span class=\"comment\">// 不合法，下一个</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 合法，计算 3x3 子网格的平均值</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> avg = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x = i - <span class=\"number\">2</span>; x &lt;= i; x++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> y = j - <span class=\"number\">2</span>; y &lt;= j; y++) &#123;</span><br><span class=\"line\">                        avg += a[x][y];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                avg /= <span class=\"number\">9</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 更新 3x3 子网格内的 result</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x = i - <span class=\"number\">2</span>; x &lt;= i; x++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> y = j - <span class=\"number\">2</span>; y &lt;= j; y++) &#123;</span><br><span class=\"line\">                        result[x][y] += avg; <span class=\"comment\">// 先累加，最后再求平均值</span></span><br><span class=\"line\">                        cnt[x][y]++;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (cnt[i][j] == <span class=\"number\">0</span>) &#123; <span class=\"comment\">// (i,j) 不属于任何子网格</span></span><br><span class=\"line\">                    result[i][j] = a[i][j];</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    result[i][j] /= cnt[i][j]; <span class=\"comment\">// 求平均值</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-time-to-revert-word-to-initial-state-ii/\">3031. 将单词恢复初始状态所需的最短时间 II</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>同问题二</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//同问题二</span></span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2024/02/06/leetcode-biweekly-contest123/",
            "url": "https://liukplus.github.io.com/2024/02/06/leetcode-biweekly-contest123/",
            "title": "leetcode-biweekly-contest123",
            "date_published": "2024-02-06T03:05:08.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code> <br>\n426/23599</p>\n<h1 id=\"第123场双周赛\"><a class=\"markdownIt-Anchor\" href=\"#第123场双周赛\">#</a> <a href=\"https://leetcode.cn/contest/biweekly-contest-123/\">第 123 场双周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/type-of-triangle-ii/\">3024. 三角形类型 II</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>排序 + 模拟</p>\n<p>三条边构成三角形的充要条件：任意两边之和大于第三边</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">triangleType</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        Arrays.sort(nums);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[<span class=\"number\">0</span>]+nums[<span class=\"number\">1</span>]&lt;=nums[<span class=\"number\">2</span>]) <span class=\"keyword\">return</span> <span class=\"string\">&quot;none&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[<span class=\"number\">0</span>] == nums[<span class=\"number\">1</span>] &amp;&amp; nums[<span class=\"number\">1</span>] == nums[<span class=\"number\">2</span>]) <span class=\"keyword\">return</span> <span class=\"string\">&quot;equilateral&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(nums[<span class=\"number\">0</span>] == nums[<span class=\"number\">1</span>] || nums[<span class=\"number\">1</span>] == nums[<span class=\"number\">2</span>]) <span class=\"keyword\">return</span> <span class=\"string\">&quot;isosceles&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;scalene&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/find-the-number-of-ways-to-place-people-i/\">3025. 人员站位的方案数 I</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>解法 1：二维前缀和<br>\n从左上角到右下角统计二维前缀和，然后二重循环遍历 points 数组，判断两个端点位置关系（是否为一个在左上，一个在右下）以及两个端点所确定的矩形区域的点的个数是否为 2（前缀和）。<br>\n解法二：排序</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//解法一</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">numberOfPairs</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] points)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] pre = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">53</span>][<span class=\"number\">53</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] p:points)&#123;</span><br><span class=\"line\">            pre[p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>][p[<span class=\"number\">1</span>]+<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=<span class=\"number\">50</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">50</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                pre[i+<span class=\"number\">1</span>][j+<span class=\"number\">1</span>] += pre[i][j+<span class=\"number\">1</span>]+pre[i+<span class=\"number\">1</span>][j+<span class=\"number\">2</span>]-pre[i][j+<span class=\"number\">2</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = points.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+<span class=\"number\">1</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> xi = points[i][<span class=\"number\">0</span>], yi = points[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> xj = points[j][<span class=\"number\">0</span>], yj = points[j][<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(xi&gt;xj || yi&lt;yj)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> temp = xi;</span><br><span class=\"line\">                    xi = xj;</span><br><span class=\"line\">                    xj = temp;</span><br><span class=\"line\">                    temp = yi;</span><br><span class=\"line\">                    yi = yj;</span><br><span class=\"line\">                    yj = temp;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(xi&lt;=xj &amp;&amp; yi&gt;=yj &amp;&amp; cal(xi,yi,xj,yj,pre) == <span class=\"number\">2</span>) ans++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> xi,<span class=\"keyword\">int</span> yi,<span class=\"keyword\">int</span> xj,<span class=\"keyword\">int</span> yj,<span class=\"keyword\">int</span>[][] pre)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pre[xj+<span class=\"number\">1</span>][yj+<span class=\"number\">1</span>]-pre[xi][yj+<span class=\"number\">1</span>]-pre[xj+<span class=\"number\">1</span>][yi+<span class=\"number\">2</span>]+pre[xi][yi+<span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-good-subarray-sum/\">3026. 最大好子数组和</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>前缀和 + 贪心</p>\n<p>连续子数组的和一般可以考虑前缀和，满足右端点与左端点之差的绝对值等于 k 即 | nums [j]-nums [i]| == k，固定 nums [j]，则 nums [i] 可能的值有 2 个，nums [j]+k 或者 nums [j]-k，用哈希表维护以 nums [i] 结尾的子数组的最小前缀和即可。</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">maximumSubarraySum</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] pre = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n+<span class=\"number\">1</span>];</span><br><span class=\"line\">        Map&lt;Integer,Long&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = -Long.MIN_VALUE;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[i];</span><br><span class=\"line\">            pre[i+<span class=\"number\">1</span>] += pre[i]+nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(map.containsKey(temp+k))&#123;</span><br><span class=\"line\">                ans = Math.max(ans,pre[i+<span class=\"number\">1</span>]-map.get(temp+k)+temp+k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(map.containsKey(temp-k))&#123;</span><br><span class=\"line\">                ans = Math.max(ans,pre[i+<span class=\"number\">1</span>]-map.get(temp-k)+temp-k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            map.merge(temp,pre[i+<span class=\"number\">1</span>],Long::min);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans==Long.MIN_VALUE?<span class=\"number\">0</span>:ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/find-the-number-of-ways-to-place-people-ii/\">3027. 人员站位的方案数 II</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>与问题二类似<br>\n解法一：在问题二的解法一加上离散化即可</p>\n<p>解法二：同问题二解法二</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">numberOfPairs</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] points)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = points.length;</span><br><span class=\"line\">        Map&lt;Integer,Integer&gt; mapx = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        Map&lt;Integer,Integer&gt; mapy = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        Set&lt;Integer&gt; xs = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        Set&lt;Integer&gt; ys = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] p:points)&#123;</span><br><span class=\"line\">            xs.add(p[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            ys.add(p[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        List&lt;Integer&gt; xl = <span class=\"keyword\">new</span> ArrayList(xs);</span><br><span class=\"line\">        List&lt;Integer&gt; yl = <span class=\"keyword\">new</span> ArrayList(ys);</span><br><span class=\"line\">        Collections.sort(xl);</span><br><span class=\"line\">        Collections.sort(yl);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> lm = xl.size(), ln = yl.size();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;xl.size();i++)&#123;</span><br><span class=\"line\">            mapx.put(xl.get(i),i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;yl.size();i++)&#123;</span><br><span class=\"line\">            mapy.put(yl.get(i),i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] pre = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[lm+<span class=\"number\">3</span>][ln+<span class=\"number\">3</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] p:points)&#123;</span><br><span class=\"line\">            pre[mapx.get(p[<span class=\"number\">0</span>])+<span class=\"number\">1</span>][mapy.get(p[<span class=\"number\">1</span>])+<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=lm;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=ln;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                pre[i+<span class=\"number\">1</span>][j+<span class=\"number\">1</span>] += pre[i][j+<span class=\"number\">1</span>]+pre[i+<span class=\"number\">1</span>][j+<span class=\"number\">2</span>]-pre[i][j+<span class=\"number\">2</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+<span class=\"number\">1</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> xi = mapx.get(points[i][<span class=\"number\">0</span>]), yi = mapy.get(points[i][<span class=\"number\">1</span>]);</span><br><span class=\"line\">                <span class=\"keyword\">int</span> xj = mapx.get(points[j][<span class=\"number\">0</span>]), yj = mapy.get(points[j][<span class=\"number\">1</span>]);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(xi&gt;xj || yi&lt;yj)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> temp = xi;</span><br><span class=\"line\">                    xi = xj;</span><br><span class=\"line\">                    xj = temp;</span><br><span class=\"line\">                    temp = yi;</span><br><span class=\"line\">                    yi = yj;</span><br><span class=\"line\">                    yj = temp;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(xi&lt;=xj &amp;&amp; yi&gt;=yj &amp;&amp; cal(xi,yi,xj,yj,pre) == <span class=\"number\">2</span>) ans++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> xi,<span class=\"keyword\">int</span> yi,<span class=\"keyword\">int</span> xj,<span class=\"keyword\">int</span> yj,<span class=\"keyword\">int</span>[][] pre)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pre[xj+<span class=\"number\">1</span>][yj+<span class=\"number\">1</span>]-pre[xi][yj+<span class=\"number\">1</span>]-pre[xj+<span class=\"number\">1</span>][yi+<span class=\"number\">2</span>]+pre[xi][yi+<span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "第123场双周赛"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2024/02/03/leetcode-weekly-contest382/",
            "url": "https://liukplus.github.io.com/2024/02/03/leetcode-weekly-contest382/",
            "title": "leetcode-weekly-contest382",
            "date_published": "2024-02-03T08:24:14.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code></p>\n<h1 id=\"第382场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第382场周赛\">#</a> <a href=\"https://leetcode.cn/contest/weekly-contest-382/\">第 382 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/number-of-changing-keys/\">3019. 按键变更的次数</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>模拟</p>\n<p>全部转换为大写 / 小写即可</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">countKeyChanges</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = s.length();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            ans += Character.toLowerCase(s.charAt(i-<span class=\"number\">1</span>)) == Character.toLowerCase(s.charAt(i))?<span class=\"number\">0</span>:<span class=\"number\">1</span>; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/find-the-maximum-number-of-elements-in-subset/\">3020. 子集中元素的最大数量</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>哈希表 + 动态规划</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maximumLength</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"comment\">//统计数组元素</span></span><br><span class=\"line\">        Map&lt;Integer,Integer&gt; cnt = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</span><br><span class=\"line\">            cnt.merge(i,<span class=\"number\">1</span>,Integer::sum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//考虑全为1的特殊情况</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> tempCnt = cnt.getOrDefault(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        ans = tempCnt%<span class=\"number\">2</span>==<span class=\"number\">0</span>?tempCnt-<span class=\"number\">1</span>:tempCnt;</span><br><span class=\"line\">        <span class=\"comment\">//map统计以i开头的序列长度</span></span><br><span class=\"line\">        Map&lt;Integer,Integer&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        Arrays.sort(nums);<span class=\"comment\">//排序加倒序遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n-<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i&lt;n-<span class=\"number\">1</span> &amp;&amp; temp==nums[i+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;<span class=\"comment\">//当前的数已经计算过一次</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> times = cnt.get(temp);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> next = temp*temp;<span class=\"comment\">//下一个数就是temp的平方</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(times&lt;<span class=\"number\">2</span> || !map.containsKey(next))&#123;</span><br><span class=\"line\">                map.put(temp,<span class=\"number\">1</span>);</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;<span class=\"comment\">//如果temp出现的次数少于2次或者下一个数没有出现在数组中，temp只能是序列中最大的数</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> nextCnt = map.get(next);</span><br><span class=\"line\">            map.put(temp,nextCnt+<span class=\"number\">2</span>);<span class=\"comment\">//以当前数开头的序列长度等于下一个数开头的序列的长度加2</span></span><br><span class=\"line\">            ans = Math.max(ans,nextCnt+<span class=\"number\">2</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/alice-and-bob-playing-flower-game/\">3021. Alice 和 Bob 玩鲜花游戏</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>脑筋急转弯</p>\n<p>轮流取花，Alice 要取最后一朵花且 Alice 先手，则花的数量必定是奇数，统计 (i,j) (1&lt;=i&lt;=n &amp;&amp; 1&lt;=j&lt;=m &amp;&amp; (i+j)%2==1) 数对的个数即可，i+j 为奇数，则只能是一奇一偶。</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">flowerGame</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> m)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> oddn = (n+<span class=\"number\">1</span>)/<span class=\"number\">2</span>, evenn = n/<span class=\"number\">2</span>, oddm = (m+<span class=\"number\">1</span>)/<span class=\"number\">2</span>, evenm = m/<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1L</span>*oddn*evenm+<span class=\"number\">1L</span>*oddm*evenn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/minimize-or-of-remaining-elements-using-operations/\">3022. 给定操作次数内使剩余元素的或值最小</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>贪心</p>\n<p>从最高位到最低位添加到 mask 中，考虑是否存在 cnt&lt;=k 的操作次数使得 mask &amp; x == 0，x 是数组中在 cnt 次操作后剩余的数相按位或的结果</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minOrAfterOperations</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mask = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">29</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> nextMask = mask | (<span class=\"number\">1</span>&lt;&lt;i);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> pre = nextMask;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n &amp;&amp; cnt&lt;=k;j++)&#123;</span><br><span class=\"line\">                pre &amp;= nums[j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(pre != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    cnt++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    pre = nextMask;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            mask = cnt&lt;=k?nextMask:mask;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">30</span>)-<span class=\"number\">1</span>-mask;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2024/01/22/leetcode-weekly-contest381/",
            "url": "https://liukplus.github.io.com/2024/01/22/leetcode-weekly-contest381/",
            "title": "leetcode-weekly-contest381",
            "date_published": "2024-01-21T16:08:44.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code></p>\n<h1 id=\"第381场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第381场周赛\">#</a> <a href=\"https://leetcode.cn/contest/weekly-contest-381/\">第 381 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-number-of-pushes-to-type-word-i/\">3014. 输入单词需要的最少按键次数 I</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>贪心</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minimumPushes</span><span class=\"params\">(String word)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] cnt = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">26</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">char</span> ch:word.toCharArray())&#123;</span><br><span class=\"line\">            cnt[ch-<span class=\"string\">&#x27;a&#x27;</span>]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> times = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> idx = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Arrays.sort(cnt);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">25</span>;i&gt;=<span class=\"number\">0</span> &amp;&amp; cnt[i]&gt;<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            ans += cnt[i]*times;</span><br><span class=\"line\">            idx = (idx+<span class=\"number\">1</span>)%<span class=\"number\">8</span>;</span><br><span class=\"line\">            times += idx==<span class=\"number\">0</span>?<span class=\"number\">1</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/count-the-number-of-houses-at-a-certain-distance-i/\">3015. 按距离统计房屋对数目 I</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>差分数组 + 分类讨论</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">long</span>[] countOfPairs(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &gt; y) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = x;</span><br><span class=\"line\">            x = y;</span><br><span class=\"line\">            y = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] ans = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x + <span class=\"number\">1</span> &gt;= y) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">                ans[i - <span class=\"number\">1</span>] = (n - i) * <span class=\"number\">2</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        diff = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt;= x) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> k = (x + y + <span class=\"number\">1</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">                add(<span class=\"number\">1</span>, k - i);</span><br><span class=\"line\">                add(x - i + <span class=\"number\">2</span>, x - i + y - k);</span><br><span class=\"line\">                add(x - i + <span class=\"number\">1</span>, x - i + <span class=\"number\">1</span> + n - y);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i &lt; (x + y) / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> k = i + (y - x + <span class=\"number\">1</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">                add(<span class=\"number\">1</span>, k - i);</span><br><span class=\"line\">                add(i - x + <span class=\"number\">2</span>, i - x + y - k);</span><br><span class=\"line\">                add(i - x + <span class=\"number\">1</span>, i - x + <span class=\"number\">1</span> + n - y);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                add(<span class=\"number\">1</span>, n - i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">long</span> sumD = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            sumD += diff[i + <span class=\"number\">1</span>];</span><br><span class=\"line\">            ans[i] = sumD * <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] diff;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r)</span> </span>&#123;</span><br><span class=\"line\">        diff[l]++;</span><br><span class=\"line\">        diff[r + <span class=\"number\">1</span>]--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-number-of-pushes-to-type-word-ii/\">3016. 输入单词需要的最少按键次数 II</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>见问题一</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minimumPushes</span><span class=\"params\">(String word)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] cnt = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">26</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">char</span> ch:word.toCharArray())&#123;</span><br><span class=\"line\">            cnt[ch-<span class=\"string\">&#x27;a&#x27;</span>]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> times = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> idx = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Arrays.sort(cnt);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">25</span>;i&gt;=<span class=\"number\">0</span> &amp;&amp; cnt[i]&gt;<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            ans += cnt[i]*times;</span><br><span class=\"line\">            idx = (idx+<span class=\"number\">1</span>)%<span class=\"number\">8</span>;</span><br><span class=\"line\">            times += idx==<span class=\"number\">0</span>?<span class=\"number\">1</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"\">3017. 按距离统计房屋对数目 II</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>见问题二</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">long</span>[] countOfPairs(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &gt; y) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = x;</span><br><span class=\"line\">            x = y;</span><br><span class=\"line\">            y = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] ans = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x + <span class=\"number\">1</span> &gt;= y) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">                ans[i - <span class=\"number\">1</span>] = (n - i) * <span class=\"number\">2</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        diff = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt;= x) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> k = (x + y + <span class=\"number\">1</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">                add(<span class=\"number\">1</span>, k - i);</span><br><span class=\"line\">                add(x - i + <span class=\"number\">2</span>, x - i + y - k);</span><br><span class=\"line\">                add(x - i + <span class=\"number\">1</span>, x - i + <span class=\"number\">1</span> + n - y);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i &lt; (x + y) / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> k = i + (y - x + <span class=\"number\">1</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">                add(<span class=\"number\">1</span>, k - i);</span><br><span class=\"line\">                add(i - x + <span class=\"number\">2</span>, i - x + y - k);</span><br><span class=\"line\">                add(i - x + <span class=\"number\">1</span>, i - x + <span class=\"number\">1</span> + n - y);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                add(<span class=\"number\">1</span>, n - i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">long</span> sumD = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            sumD += diff[i + <span class=\"number\">1</span>];</span><br><span class=\"line\">            ans[i] = sumD * <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] diff;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r)</span> </span>&#123;</span><br><span class=\"line\">        diff[l]++;</span><br><span class=\"line\">        diff[r + <span class=\"number\">1</span>]--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2024/01/21/leetcode-biweekly-contest122/",
            "url": "https://liukplus.github.io.com/2024/01/21/leetcode-biweekly-contest122/",
            "title": "leetcode-biweekly-contest122",
            "date_published": "2024-01-21T15:22:05.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code> <br>\n2533 / 25687</p>\n<h1 id=\"第122场双周赛\"><a class=\"markdownIt-Anchor\" href=\"#第122场双周赛\">#</a> <a href=\"https://leetcode.cn/contest/biweekly-contest-122/\">第 122 场双周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/divide-an-array-into-subarrays-with-minimum-cost-i/\">100181. 将数组分成最小总代价的子数组 I</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>贪心</p>\n<p>找数组 [1,n-1] 区间内的最小的 2 个数即可</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minimumCost</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> min = Math.min(nums[<span class=\"number\">1</span>],nums[<span class=\"number\">2</span>]), sec = Math.max(nums[<span class=\"number\">1</span>],nums[<span class=\"number\">2</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">3</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp&lt;min)&#123;</span><br><span class=\"line\">                sec = min;</span><br><span class=\"line\">                min = temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(temp&lt;sec)&#123;</span><br><span class=\"line\">                sec = temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>]+min+sec;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/find-if-array-can-be-sorted/\">3011. 判断一个数组是否可以变为有序</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>滑动窗口 + 排序</p>\n<p>按照比特为 1 的数目将数组进行划分，比特为 1 的数目相同且相邻的元素划分在同一组，将各组组内进行排序，判断得到的数组是否有序即可</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">canSortArray</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            arr[i] = nums[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Arrays.sort(arr);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> j = i;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> a = cnt(nums[i]);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;j&lt;n &amp;&amp; cnt(nums[j])==a;j++)&#123;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Arrays.sort(nums,i,j);</span><br><span class=\"line\">            i = j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i] != arr[i]) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cnt</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(num&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            ans++;</span><br><span class=\"line\">            num &amp;= num-<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/minimize-length-of-array-using-operations/\">100164. 通过操作使数组长度最小</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>脑筋急转弯 + 贪心</p>\n<p>记数组最小的数为 min，min 出现次数为 cnt，判断数组中是否存在 j 使得 j% min=c!=0，如果存在，选择 j，min 这两个数进行操作将 c 添加到数组末尾，此时 c 在数组只出现了一次，且是数组中唯一最小的数，现在只需要将 c 作为第一个操作数，数组中其他数依次作为第二个操作数，最终数组只剩一个 c；如果不存在，数组中的数都可以表示为 k*min,k&gt;=1 且为整数，互相的模都为 min 的倍数，因此将 min 作为第一个操作数，其他不为 min 的数作为第二个操作数，最后 min,min 两两之间模操作，最后剩下 (cnt+1)/2 个数。</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minimumArrayLength</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> min = Arrays.stream(nums).min().getAsInt();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</span><br><span class=\"line\">            cnt += i==min?<span class=\"number\">1</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(min == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> (cnt+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i%min == <span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (cnt+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/divide-an-array-into-subarrays-with-minimum-cost-ii/\">100178. 将数组分成最小总代价的子数组 II</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>滑动窗口 + 贪心</p>\n<p>维护 dist+1 大小的窗口，寻找窗口内最小的 k-1 个值，用两个堆 / 有序散列表 kmin，others 分别表示最小的 k-1 个值和其他值的集合。</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> size = <span class=\"number\">0</span>;<span class=\"comment\">//size表示kmin的大小</span></span><br><span class=\"line\">    <span class=\"keyword\">long</span> sum = <span class=\"number\">0</span>;<span class=\"comment\">//sum表示k-1个最小值的和</span></span><br><span class=\"line\">    <span class=\"keyword\">long</span> ans = Long.MAX_VALUE;</span><br><span class=\"line\">    TreeMap&lt;Integer,Integer&gt; kmin = <span class=\"keyword\">new</span> TreeMap();<span class=\"comment\">//k-1个最小值的集合</span></span><br><span class=\"line\">    TreeMap&lt;Integer,Integer&gt; others = <span class=\"keyword\">new</span> TreeMap();<span class=\"comment\">//窗口内其他值的集合</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">minimumCost</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k, <span class=\"keyword\">int</span> dist)</span> </span>&#123;</span><br><span class=\"line\">        k--;<span class=\"comment\">//因为nums[0]是必定会选的，现在就是在1~n-1中各个大小为dist+1的窗口找k-1个最小的数</span></span><br><span class=\"line\">        sum += nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=dist+<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[i];</span><br><span class=\"line\">            insert(temp,k);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=dist+<span class=\"number\">2</span>;i&lt;n;i++)&#123;<span class=\"comment\">//滑动窗口</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[i];</span><br><span class=\"line\">            remove(nums[i-dist-<span class=\"number\">1</span>],k);<span class=\"comment\">//移除上一个窗口最左边的数</span></span><br><span class=\"line\">            insert(temp,k);<span class=\"comment\">//加入当前的数</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">removeKey</span><span class=\"params\">(TreeMap&lt;Integer,Integer&gt; map,<span class=\"keyword\">int</span> key)</span></span>&#123;<span class=\"comment\">//从散列表中移除一个值</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> v = map.get(key);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(--v == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            map.remove(key);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            map.put(key,v);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">(<span class=\"keyword\">int</span> temp,<span class=\"keyword\">int</span> k)</span></span>&#123;<span class=\"comment\">//从窗口内移除一个值，有可能只修改kmin，也有可能只修改others，也可能都要修改</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(others.containsKey(temp))&#123;<span class=\"comment\">//如果要移除的值就在others当中，直接从others移除即可，不会影响到kmin</span></span><br><span class=\"line\">            removeKey(others,temp);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        removeKey(kmin,temp);<span class=\"comment\">//否则就从kmin当中移除，为了尽量保证kmin中有k个元素，如果others非空，从others当中移除一个最小值添加到kmin</span></span><br><span class=\"line\">        sum -= temp;</span><br><span class=\"line\">        size--;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(others.isEmpty()) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> first = others.firstKey();</span><br><span class=\"line\">        sum += first;</span><br><span class=\"line\">        size++;</span><br><span class=\"line\">        kmin.merge(first,<span class=\"number\">1</span>,Integer::sum);</span><br><span class=\"line\">        removeKey(others,first);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(<span class=\"keyword\">int</span> temp,<span class=\"keyword\">int</span> k)</span></span>&#123;<span class=\"comment\">//向窗口中加入一个数</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(size&lt;k)&#123;<span class=\"comment\">//如果kmin大小size&lt;k，则直接加入kmin即可</span></span><br><span class=\"line\">            kmin.merge(temp,<span class=\"number\">1</span>,Integer::sum);</span><br><span class=\"line\">            size++;</span><br><span class=\"line\">            sum += temp;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(size == k)&#123;</span><br><span class=\"line\">                ans = Math.min(ans,sum);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//kmin大小为k，加入一个数后需要移除kmin的最大值，</span></span><br><span class=\"line\">        Map.Entry&lt;Integer,Integer&gt; largestEntry = kmin.lastEntry();<span class=\"comment\">//找到kmin中的最大值</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> klargest = largestEntry.getKey();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(temp&gt;=klargest)&#123;<span class=\"comment\">//如果要添加的数就是最大值，那么就不需要往kmin中加入这个数又移除这个数到others当中，直接加入others即可</span></span><br><span class=\"line\">            others.merge(temp,<span class=\"number\">1</span>,Integer::sum);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//加入temp。移除kmin中最大值到others</span></span><br><span class=\"line\">        sum += temp-klargest;</span><br><span class=\"line\">        kmin.merge(temp,<span class=\"number\">1</span>,Integer::sum);</span><br><span class=\"line\">        others.merge(klargest,<span class=\"number\">1</span>,Integer::sum);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cnt = largestEntry.getValue();</span><br><span class=\"line\">        removeKey(kmin,klargest);</span><br><span class=\"line\">        ans = Math.min(ans,sum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2024/01/07/leetcode-biweekly-contest121/",
            "url": "https://liukplus.github.io.com/2024/01/07/leetcode-biweekly-contest121/",
            "title": "leetcode-biweekly-contest121",
            "date_published": "2024-01-06T17:09:21.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code> <br>\n1044/23810</p>\n<h1 id=\"第121场双周赛\"><a class=\"markdownIt-Anchor\" href=\"#第121场双周赛\">#</a> <a href=\"https://leetcode.cn/contest/biweekly-contest-121/\">第 121 场双周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/smallest-missing-integer-greater-than-sequential-prefix-sum/\">100157. 大于等于顺序前缀和的最小缺失整数</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>模拟加哈希</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">missingInteger</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">        Set&lt;Integer&gt; set = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j:nums)&#123;</span><br><span class=\"line\">            set.add(j);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n &amp;&amp; nums[i]==nums[i-<span class=\"number\">1</span>]+<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            ans+=nums[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(set.contains(ans))&#123;</span><br><span class=\"line\">            ans++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-number-of-operations-to-make-array-xor-equal-to-k/\">100168. 使数组异或和等于 K 的最少操作次数</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>翻转第 i 位等价于异或 (1&lt;&lt;i)，异或等式 a^b=c =&gt; a = b^c</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minOperations</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> xor = k;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</span><br><span class=\"line\">            xor ^= i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;xor&gt;<span class=\"number\">0</span>;)&#123;</span><br><span class=\"line\">            ans++;</span><br><span class=\"line\">            xor &amp;= xor-<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-number-of-operations-to-make-x-and-y-equal/\">100159. 使 X 和 Y 相等的最少操作次数</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>迪杰斯特拉 /bfs</p>\n<p>数字看成图中节点，操作看成两个数之间存在权值为 1 的无向边，求最少操作次数转化为求最短路径</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minimumOperationsToMakeEqual</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y&gt;=x) <span class=\"keyword\">return</span> y-x;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">100000</span>];</span><br><span class=\"line\">        dp[x] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        PriorityQueue&lt;Integer&gt; q = <span class=\"keyword\">new</span> PriorityQueue&lt;Integer&gt;((a,b) -&gt; dp[a]-dp[b]);</span><br><span class=\"line\">        q.offer(x);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;dp[y]==<span class=\"number\">0</span>;)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = q.poll();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> next = temp+<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dp[next] == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                dp[next] = dp[temp]+<span class=\"number\">1</span>;</span><br><span class=\"line\">                q.offer(next);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            next = temp-<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(next&gt;<span class=\"number\">0</span> &amp;&amp; dp[next]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                dp[next] = dp[temp]+<span class=\"number\">1</span>;</span><br><span class=\"line\">                q.offer(next);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp%<span class=\"number\">5</span> == <span class=\"number\">0</span> &amp;&amp; dp[temp/<span class=\"number\">5</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                dp[temp/<span class=\"number\">5</span>] = dp[temp]+<span class=\"number\">1</span>;</span><br><span class=\"line\">                q.offer(temp/<span class=\"number\">5</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp%<span class=\"number\">11</span>==<span class=\"number\">0</span> &amp;&amp; dp[temp/<span class=\"number\">11</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                dp[temp/<span class=\"number\">11</span>] = dp[temp]+<span class=\"number\">1</span>;</span><br><span class=\"line\">                q.offer(temp/<span class=\"number\">11</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[y];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/count-the-number-of-powerful-integers/\">100163. 统计强大整数的数目</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>数位 dp<br>\n 暂时先不考虑 limit 约束和 finish 约束，对每个数位 i 考虑，枚举当前数位 i 可以填哪些数字，而当前数位可填的数字要受到前面所填数位的影响，因为最终得到的数要不小于 start，如果前面填的数位 [0,i-1] 等于 start 相应位置的数位值即 start [0,i-1]，那么当前数位不能填比 start [i] 小的值，因此需要用一个布尔值 limitByLow 记录是否受到 start [0,i-1] 的约束，如否，则当前可以填任何值，如是则只能填 [start [i],9] 区间内的值。现在加入 finish 约束，与 start 约束类似，用 limitByHigh 记录是否受到 finish [0,i-1] 的约束。现在再加入 limit 约束，在枚举当前可填数位的 for 循环加入限制即可。答案即为 dfs (0,true,true), 用 memo 数组记录 dfs (i,false,false)。</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">numberOfPowerfulInt</span><span class=\"params\">(<span class=\"keyword\">long</span> start, <span class=\"keyword\">long</span> finish, <span class=\"keyword\">int</span> limit, String s)</span> </span>&#123;</span><br><span class=\"line\">        String starts = Long.toString(start);</span><br><span class=\"line\">        String finishs = Long.toString(finish);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = finishs.length();</span><br><span class=\"line\">        starts = <span class=\"string\">&quot;0&quot;</span>.repeat(n-starts.length())+starts;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] memo = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n];</span><br><span class=\"line\">        Arrays.fill(memo,-<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dfs(<span class=\"number\">0</span>,s.toCharArray(),<span class=\"keyword\">true</span>,<span class=\"keyword\">true</span>,starts.toCharArray(),finishs.toCharArray(),memo,limit,n);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">long</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> idx,<span class=\"keyword\">char</span>[] s,<span class=\"keyword\">boolean</span> limitByLow,<span class=\"keyword\">boolean</span> limitByHigh,<span class=\"keyword\">char</span>[] starta,<span class=\"keyword\">char</span>[] finisha,<span class=\"keyword\">long</span>[] memo,<span class=\"keyword\">int</span> limit,<span class=\"keyword\">int</span> len)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(idx == len) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!limitByLow &amp;&amp; !limitByHigh &amp;&amp; memo[idx]!=-<span class=\"number\">1</span>) <span class=\"keyword\">return</span> memo[idx];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> high = limitByHigh?finisha[idx]-<span class=\"string\">&#x27;0&#x27;</span>:<span class=\"number\">9</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> low = limitByLow?starta[idx]-<span class=\"string\">&#x27;0&#x27;</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = s.length;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(idx&lt;len-n)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=low;j&lt;=Math.min(high,limit);j++)&#123;</span><br><span class=\"line\">                ans += dfs(idx+<span class=\"number\">1</span>,s,limitByLow &amp;&amp; j==low,limitByHigh &amp;&amp; j==high,starta,finisha,memo,limit,len);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = s[idx+n-len]-<span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(low&lt;=x &amp;&amp; x&lt;=Math.min(high,limit))&#123;</span><br><span class=\"line\">                ans = dfs(idx+<span class=\"number\">1</span>,s,limitByLow &amp;&amp; x==low,limitByHigh &amp;&amp; x==high,starta,finisha,memo,limit,len);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!limitByLow &amp;&amp; !limitByHigh)&#123;</span><br><span class=\"line\">            memo[idx] = ans;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2024/01/02/leetcode-weekly-contest378/",
            "url": "https://liukplus.github.io.com/2024/01/02/leetcode-weekly-contest378/",
            "title": "leetcode-weekly-contest378",
            "date_published": "2024-01-02T08:54:33.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"第378场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第378场周赛\">#</a> <a href=\"https://leetcode.cn/contest/weekly-contest-378/\">第 378 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/check-if-bitwise-or-has-trailing-zeros/\">2980. 检查按位或是否存在尾随零</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>模拟，判断数组是否存在两个偶数即可</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasTrailingZeros</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> f = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!f)&#123;</span><br><span class=\"line\">                f = i%<span class=\"number\">2</span>==<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/find-longest-special-substring-that-occurs-thrice-i/\">2981. 找出出现至少三次的最长特殊子字符串 I</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>长度为 n 的特殊字符串包含 n-m+1 个长度为 m 的子串。将 s 分割为多个特殊字符串，记最长的特殊字符串长度为 L，则长度为 L-2 的特殊字符串至少出现了 L-(L-2)+1=3 次，故答案至少为 L-2，至多为 L，枚举答案即可。</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maximumLength</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = s.length();</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] arr = s.toCharArray();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> maxCon = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;i&lt;n;)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;j&lt;n &amp;&amp; arr[j]==arr[i];j++)&#123;&#125;</span><br><span class=\"line\">            maxCon = Math.max(maxCon,j-i);</span><br><span class=\"line\">            i = j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=Math.min(maxCon-<span class=\"number\">1</span>,<span class=\"number\">2</span>);i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(check(arr,maxCon-i)) <span class=\"keyword\">return</span> maxCon-i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">char</span>[] arr,<span class=\"keyword\">int</span> len)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] cnt = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">26</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;i&lt;arr.length;)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;j&lt;arr.length &amp;&amp; arr[j]==arr[i];j++)&#123;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> idx = arr[i]-<span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">            cnt[idx] += Math.max(j-i-len+<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">            i = j;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cnt[idx]&gt;=<span class=\"number\">3</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/find-longest-special-substring-that-occurs-thrice-ii/\">2982. 找出出现至少三次的最长特殊子字符串 II</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>同问题二</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 同问题二</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/palindrome-rearrangement-queries/\">2983. 回文串重新排列查询</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2024/01/02/leetcode-weekly-contest376/",
            "url": "https://liukplus.github.io.com/2024/01/02/leetcode-weekly-contest376/",
            "title": "leetcode-weekly-contest376",
            "date_published": "2024-01-02T08:54:17.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"第376场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第376场周赛\">#</a> <a href=\"https://leetcode.cn/contest/weekly-contest-376/\">第 376 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\">## 问题二</span><br><span class=\"line\">[]()</span><br><span class=\"line\">### 解题思路</span><br><span class=\"line\">### 代码</span><br><span class=\"line\">```java</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2023/12/24/leetcode-biweekly-contest120/",
            "url": "https://liukplus.github.io.com/2023/12/24/leetcode-biweekly-contest120/",
            "title": "leetcode-biweekly-contest120",
            "date_published": "2023-12-24T15:52:43.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code></p>\n<h1 id=\"第120场双周赛\"><a class=\"markdownIt-Anchor\" href=\"#第120场双周赛\">#</a> <a href=\"https://leetcode.cn/contest/biweekly-contest-120/\">第 120 场双周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/count-the-number-of-incremovable-subarrays-i/\">100171. 统计移除递增子数组的数目 I</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>同第三题</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 同第三题</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>贪心</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">largestPerimeter</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        Arrays.sort(nums);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">            sum += nums[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=n-<span class=\"number\">1</span>;j&gt;=<span class=\"number\">2</span>;j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum-nums[j]&gt;nums[j])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            sum -= nums[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/count-the-number-of-incremovable-subarrays-ii/\">10033. 统计移除递增子数组的数目 II</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>滑动窗口<br>\n暴力做法为遍历右端点 j，然后遍历左端点，找到第一个下标 i 使得 [0,i] 递增且 nums [i]&lt;nums [j]，然后更新答案 ans+=i+2，但是没有利用单调性，即对于右端点 j1&lt;j2,i1&lt;=i2，反证法可以证明，假如 i1&gt;i2，那么 nums [j2]&gt;nums [j1]&gt;nums [i1]，存在 i1 使得 [0,i1] 递增且 nums [i1]&lt;nums [j2], 所以 j2 对应的第一个满足条件的一定大于 i2，与定义不符。故下标 i 不可能左移。因此可以使用滑动窗口维护左右指针 i 和 j，使得 [0,i] 递增，[j,n-1] 递减，且 nums [i]&lt;nums [j]。<br>\n遍历右指针 j，维护递增后缀，同时维护最长前缀 [0,i] 使得前缀最后一个元素小于右指针元素，可以删除的子数组为，[i,j-1],[i-1,j]…,[i,i-1] 更新答案 ans += i+2;</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">incremovableSubarrayCount</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;i&lt;n-<span class=\"number\">1</span> &amp;&amp; nums[i]&lt;nums[i+<span class=\"number\">1</span>];i++)&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i == n-<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1L</span>*n*(n+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = i+<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=n-<span class=\"number\">1</span>;j==n-<span class=\"number\">1</span> || nums[j]&lt;nums[j+<span class=\"number\">1</span>];j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;i&gt;=<span class=\"number\">0</span> &amp;&amp; nums[i]&gt;=nums[j];i--)&#123;&#125;</span><br><span class=\"line\">            ans += i+<span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/find-number-of-coins-to-place-in-tree-nodes/\">100141. 树中每个节点放置的金币数目</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>树形 dp</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2023/12/24/leetcode-weekly-contest377/",
            "url": "https://liukplus.github.io.com/2023/12/24/leetcode-weekly-contest377/",
            "title": "leetcode-weekly-contest377",
            "date_published": "2023-12-24T12:51:03.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code></p>\n<h1 id=\"第377场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第377场周赛\">#</a> <a href=\"https://leetcode.cn/contest/weekly-contest-377/\">第 377 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-number-game/\">100148. 最小数字游戏</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>排序加模拟</p>\n<p>将奇数下标的元素与偶数下标的元素交换位置即可</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] numberGame(<span class=\"keyword\">int</span>[] nums) &#123;</span><br><span class=\"line\">        Arrays.sort(nums);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i+=<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[i];</span><br><span class=\"line\">            nums[i] = nums[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">            nums[i+<span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nums;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-square-area-by-removing-fences-from-a-field/\">100169. 移除栅栏得到的正方形田地的最大面积</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>哈希表</p>\n<p>数据范围（1 &lt;= hFences.length, vFences.length &lt;= 600）, 可以考虑 n^2 时间复杂度的暴力算法，要确定一个矩形区域，只需要知道上下两条边的长度 h 和左右两条边的长度 v，先用哈希表记录所有可能的 h, 然后遍历所有的 v，判断是否存在 h==v，如是，更新答案。</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maximizeSquareArea</span><span class=\"params\">(<span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span>[] hFences, <span class=\"keyword\">int</span>[] vFences)</span> </span>&#123;</span><br><span class=\"line\">        Set&lt;Integer&gt; hor = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mo = <span class=\"number\">1000000007</span>;</span><br><span class=\"line\">        Arrays.sort(hFences);</span><br><span class=\"line\">        Arrays.sort(vFences);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;hFences.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = hFences[i];</span><br><span class=\"line\">            hor.add(temp-<span class=\"number\">1</span>);</span><br><span class=\"line\">            hor.add(m-temp);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i-<span class=\"number\">1</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                hor.add(temp-hFences[j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        hor.add(m-<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(hor.contains(n-<span class=\"number\">1</span>)) <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)((<span class=\"number\">1L</span>*(n-<span class=\"number\">1</span>)*(n-<span class=\"number\">1</span>))%mo);</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;vFences.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = vFences[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(hor.contains(temp-<span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">                ans = Math.max(ans,<span class=\"number\">1L</span>*(temp-<span class=\"number\">1</span>)*(temp-<span class=\"number\">1</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(hor.contains(n-temp))&#123;</span><br><span class=\"line\">                ans = Math.max(ans,<span class=\"number\">1L</span>*(n-temp)*(n-temp));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i-<span class=\"number\">1</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> side = temp-vFences[j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(hor.contains(side))&#123;</span><br><span class=\"line\">                    ans = Math.max(ans,<span class=\"number\">1L</span>*side*side);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// ans = ans%mo;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans==-<span class=\"number\">1</span>?-<span class=\"number\">1</span>:(<span class=\"keyword\">int</span>)(ans%mo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-cost-to-convert-string-i/\">100156. Minimum Cost to Convert String I</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>floyd</p>\n<p>把字母表的字母当作节点，元素三元组（original [i],changed [i],cost [i]）表示存在一条起点为 original [i], 终点为 changed [i]，距离为 cost [i] 的边。题目就转换为一个最短路径的问题。用 floyd 算法计算字母之间的最短路即数组 dist [26][26]，遍历 source 的下标 i，判断从 source [i] 出发，target [i] 是否可达，如是，更新答案，加上相应的最短路径长度，否则返回 - 1。</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">minimumCost</span><span class=\"params\">(String source, String target, <span class=\"keyword\">char</span>[] original, <span class=\"keyword\">char</span>[] changed, <span class=\"keyword\">int</span>[] cost)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[][] dist = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[<span class=\"number\">26</span>][<span class=\"number\">26</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">long</span>[] d:dist)&#123;</span><br><span class=\"line\">            Arrays.fill(d,-<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">26</span>;i++)&#123;</span><br><span class=\"line\">            dist[i][i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;original.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> idxo = original[i]-<span class=\"string\">&#x27;a&#x27;</span>, idxc = changed[i]-<span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">            dist[idxo][idxc] = dist[idxo][idxc]==-<span class=\"number\">1</span>?cost[i]:Math.min(dist[idxo][idxc],cost[i]);</span><br><span class=\"line\">            <span class=\"comment\">// dist[idxc][idxo] = dist[idxo][idxc];</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">26</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">26</span>;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;<span class=\"number\">26</span>;k++)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(dist[j][i] == -<span class=\"number\">1</span> || dist[i][k] == -<span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                    dist[j][k] = dist[j][k]==-<span class=\"number\">1</span>?dist[j][i]+dist[i][k]:Math.min(dist[j][i]+dist[i][k],dist[j][k]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;source.length();i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> chs = source.charAt(i)-<span class=\"string\">&#x27;a&#x27;</span>, cht = target.charAt(i)-<span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dist[chs][cht]==-<span class=\"number\">1</span>) <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">            ans += dist[chs][cht];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-cost-to-convert-string-ii/\">100158. 转换字符串的最小成本 II</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>动态规划 + 哈希 + floyd</p>\n<p>这题与上题类似，只是节点从字符转换为字符串了，为 original 和 changed 数组的每个字符串分配一个不同的数，映射关系用哈希表 map 存储，这样就能用数组表示字符串之间的距离，每个字符串对应的数即为数组下标。与上题类似，用 floyd 算法计算最短路径数组 dist。记 source 长度为 n,original 长度为 m，动态规划：定义长度为 n+1 的数组 dp，dp [i] (1&lt;i&lt;=n) 表示 source 下标 0~i-1 的子串到相应的 target 子串的最短距离，状态方程为 dp [i] = min (dp [j]+dist [map.get (source.substring (j,i))][map.get (target.substring (j,i))]) for 0&lt;j&lt;i &amp;&amp; map.containsKey (source.substring (j,i)) &amp;&amp; map.containsKey (target.substring (j,i))，以及 dp [i] = min (dp [i-1],dp [i]) if source [i]==target [i]，时间复杂度为 o (m<sup>3+n</sup>3)，会超时，而 m&lt;n，这里我们的思路是对每个结束下标 i，枚举子串的起始下标 j，实际上对每个结束下标 i，我们要去寻找每个可能的状态转换，而合法的状态转换要求 source 以 i 结尾的子串和 target 相对应的子串都必须是图中的节点，必要条件是图中节点的所有可能长度包含该子串的长度，因此我们这里枚举子串的所有可能长度。时间复杂度为 o (m<sup>3+mn</sup>2)</p>\n<p>不定长字符串匹配也可以用字典树来做<br>\n动态规划 + 字典树 + floyd</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 动态规划+哈希+floyd</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">minimumCost</span><span class=\"params\">(String source, String target, String[] original, String[] changed, <span class=\"keyword\">int</span>[] cost)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = source.length();</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n+<span class=\"number\">1</span>];</span><br><span class=\"line\">        Arrays.fill(dp,-<span class=\"number\">1</span>);</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Set&lt;String&gt; set = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        Set&lt;Integer&gt; cnt = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(String str:original)&#123;</span><br><span class=\"line\">            cnt.add(str.length());</span><br><span class=\"line\">            set.add(str);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(String str:changed)&#123;</span><br><span class=\"line\">            set.add(str);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Map&lt;String,Integer&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> idx = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(String str:set)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(map.containsKey(str)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            map.put(str,idx++);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[][] dist = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[idx][idx];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;idx;i++)&#123;</span><br><span class=\"line\">            Arrays.fill(dist[i],-<span class=\"number\">1</span>);</span><br><span class=\"line\">            dist[i][i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;original.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> idxo = map.get(original[i]), idxc = map.get(changed[i]);</span><br><span class=\"line\">            dist[idxo][idxc] = dist[idxo][idxc]==-<span class=\"number\">1</span>?cost[i]:Math.min(dist[idxo][idxc],cost[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;idx;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;idx;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(dist[j][i] == -<span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;idx;k++)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(dist[i][k] == -<span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                    dist[j][k] = dist[j][k]==-<span class=\"number\">1</span>?dist[j][i]+dist[i][k]:Math.min(dist[j][i]+dist[i][k],dist[j][k]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(source.charAt(i) == target.charAt(i)) dp[i+<span class=\"number\">1</span>] = dp[i];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(Integer k:cnt)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> j = i-k+<span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j&lt;<span class=\"number\">0</span> || dp[j] == -<span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                String strs = source.substring(j,i+<span class=\"number\">1</span>),strt = target.substring(j,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!map.containsKey(strs) || !map.containsKey(strt)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> temps = map.get(strs), tempt = map.get(strt);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(dist[temps][tempt] == -<span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">long</span> next = dist[temps][tempt]+dp[j];</span><br><span class=\"line\">                dp[i+<span class=\"number\">1</span>] = dp[i+<span class=\"number\">1</span>]==-<span class=\"number\">1</span>?next:Math.min(dp[i+<span class=\"number\">1</span>],next);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 动态规划+字典树+floyd</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">    Node[] son = <span class=\"keyword\">new</span> Node[<span class=\"number\">26</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sid = -<span class=\"number\">1</span>; <span class=\"comment\">// 字符串的编号</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Node root = <span class=\"keyword\">new</span> Node();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> sid = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">minimumCost</span><span class=\"params\">(String source, String target, String[] original, String[] changed, <span class=\"keyword\">int</span>[] cost)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 初始化距离矩阵</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> m = cost.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] dis = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m * <span class=\"number\">2</span>][m * <span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; dis.length; i++) &#123;</span><br><span class=\"line\">            Arrays.fill(dis[i], Integer.MAX_VALUE / <span class=\"number\">2</span>);</span><br><span class=\"line\">            dis[i][i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; cost.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = put(original[i]);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y = put(changed[i]);</span><br><span class=\"line\">            dis[x][y] = Math.min(dis[x][y], cost[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Floyd 求任意两点最短路</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; sid; k++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sid; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (dis[i][k] == Integer.MAX_VALUE / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; sid; j++) &#123;</span><br><span class=\"line\">                    dis[i][j] = Math.min(dis[i][j], dis[i][k] + dis[k][j]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] s = source.toCharArray();</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] t = target.toCharArray();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = s.length;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] f = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 不修改 source[i]</span></span><br><span class=\"line\">            f[i] = s[i] == t[i] ? f[i + <span class=\"number\">1</span>] : Long.MAX_VALUE / <span class=\"number\">2</span>;</span><br><span class=\"line\">            Node p = root, q = root;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class=\"line\">                p = p.son[s[j] - <span class=\"string\">&#x27;a&#x27;</span>];</span><br><span class=\"line\">                q = q.son[t[j] - <span class=\"string\">&#x27;a&#x27;</span>];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (p == <span class=\"keyword\">null</span> || q == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (p.sid &lt; <span class=\"number\">0</span> || q.sid &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// 修改从 i 到 j 的这一段</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> d = dis[p.sid][q.sid];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (d &lt; Integer.MAX_VALUE / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                    f[i] = Math.min(f[i], d + f[j + <span class=\"number\">1</span>]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> f[<span class=\"number\">0</span>] &lt; Long.MAX_VALUE / <span class=\"number\">2</span> ? f[<span class=\"number\">0</span>] : -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">put</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        Node o = root;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">char</span> b : s.toCharArray()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> i = b - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (o.son[i] == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                o.son[i] = <span class=\"keyword\">new</span> Node();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            o = o.son[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (o.sid &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            o.sid = sid++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> o.sid;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2023/12/12/leetcode-biweekly-contest119/",
            "url": "https://liukplus.github.io.com/2023/12/12/leetcode-biweekly-contest119/",
            "title": "leetcode-biweekly-contest119",
            "date_published": "2023-12-12T08:16:24.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code> <br>\n255</p>\n<h1 id=\"第119场双周赛\"><a class=\"markdownIt-Anchor\" href=\"#第119场双周赛\">#</a> <a href=\"https://leetcode.cn/contest/biweekly-contest-119/\">第 119 场双周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/find-common-elements-between-two-arrays/\">2956. 找到两个数组中的公共元素</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>模拟，数组元素 1&lt;=nums [i]&lt;=100</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] findIntersectionValues(<span class=\"keyword\">int</span>[] nums1, <span class=\"keyword\">int</span>[] nums2) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] cnt1 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">101</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] cnt2 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">101</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums1)&#123;</span><br><span class=\"line\">            cnt1[i]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums2)&#123;</span><br><span class=\"line\">            cnt2[i]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] ans = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;nums1.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums1[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cnt2[temp]&gt;<span class=\"number\">0</span>) ans[<span class=\"number\">0</span>]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;nums2.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums2[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cnt1[temp]&gt;<span class=\"number\">0</span>) ans[<span class=\"number\">1</span>]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/remove-adjacent-almost-equal-characters/\">2957. 消除相邻近似相等字符</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>贪心</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">removeAlmostEqualCharacters</span><span class=\"params\">(String word)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = word.length();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] arr = word.toCharArray();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">char</span> pre = arr[i-<span class=\"number\">1</span>], cur = arr[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Math.abs(cur-pre)&lt;<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">                ans++;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/length-of-longest-subarray-with-at-most-k-frequency/\">2958. 最多 K 个重复元素的最长子数组</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>滑动窗口</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxSubarrayLength</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        Map&lt;Integer,Integer&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> t = nums[i];</span><br><span class=\"line\">            map.merge(t,<span class=\"number\">1</span>,Integer::sum);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;map.get(t)&gt;k;j++)&#123;</span><br><span class=\"line\">                map.put(nums[j],map.get(nums[j])-<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ans = Math.max(ans,i-j+<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/number-of-possible-sets-of-closing-branches/\">2959. 关闭分部的可行集合数目</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>二进制枚举 + floyd</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">numberOfSets</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> maxDistance, <span class=\"keyword\">int</span>[][] roads)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] dist = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n][n];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] d:dist)&#123;</span><br><span class=\"line\">            Arrays.fill(d,<span class=\"number\">1001</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] r:roads)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> from = r[<span class=\"number\">0</span>], to = r[<span class=\"number\">1</span>], cost = r[<span class=\"number\">2</span>];</span><br><span class=\"line\">            dist[from][to] = Math.min(dist[from][to],cost);</span><br><span class=\"line\">            dist[to][from] = dist[from][to];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;n)-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[][] temp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n][n];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)&#123;</span><br><span class=\"line\">                    temp[j][k] = dist[j][k];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(check(i,maxDistance,temp,n)) ans++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">int</span> set,<span class=\"keyword\">int</span> m,<span class=\"keyword\">int</span>[][] dist,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(((<span class=\"number\">1</span>&lt;&lt;i) &amp; set)!=<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(((<span class=\"number\">1</span>&lt;&lt;j) &amp; set)!=<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(((<span class=\"number\">1</span>&lt;&lt;k) &amp; set)!=<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                    dist[j][k] = Math.min(dist[j][k],dist[j][i]+dist[i][k]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(((<span class=\"number\">1</span>&lt;&lt;i) &amp; set)!=<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+<span class=\"number\">1</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(((<span class=\"number\">1</span>&lt;&lt;j) &amp; set)!=<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(dist[i][j]&gt;m) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2023/12/12/leetcode-weekly-contest375/",
            "url": "https://liukplus.github.io.com/2023/12/12/leetcode-weekly-contest375/",
            "title": "leetcode-weekly-contest375",
            "date_published": "2023-12-12T07:28:33.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code></p>\n<h1 id=\"第375场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第375场周赛\">#</a> <a href=\"https://leetcode.cn/contest/weekly-contest-375/\">第 375 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/count-tested-devices-after-test-operations/\">2960. 统计已测试设备</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>按照题目描述模拟即可，不用真正修改数组，用变量记录电池百分比减少量即可</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">countTestedDevices</span><span class=\"params\">(<span class=\"keyword\">int</span>[] batteryPercentages)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = batteryPercentages.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = batteryPercentages[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp-ans&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                ans++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/double-modular-exponentiation/\">2961. 双模幂运算</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>解题关键 (a*b)% c = ((a% c) * (b% c))% c，按照题目条件判断每个下标即可</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;Integer&gt; <span class=\"title\">getGoodIndices</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] variables, <span class=\"keyword\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = variables.length;</span><br><span class=\"line\">        List&lt;Integer&gt; ans = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> a = variables[i][<span class=\"number\">0</span>], b = variables[i][<span class=\"number\">1</span>], c = variables[i][<span class=\"number\">2</span>], m = variables[i][<span class=\"number\">3</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(check(a,b,c,m,target)) ans.add(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b,<span class=\"keyword\">int</span> c,<span class=\"keyword\">int</span> m,<span class=\"keyword\">int</span> target)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;b;i++)&#123;</span><br><span class=\"line\">            temp = (temp*a)%<span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cur = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c;i++)&#123;</span><br><span class=\"line\">            cur = (cur*temp)%m;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cur == target;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/count-subarrays-where-max-element-appears-at-least-k-times/\">2962. 统计最大元素出现至少 K 次的子数组</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>前缀和 / 滑动窗口</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">countSubarrays</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> max = Arrays.stream(nums).max().getAsInt();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        Map&lt;Integer,Integer&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        map.put(<span class=\"number\">0</span>,-<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp == max)&#123;</span><br><span class=\"line\">                cnt++;</span><br><span class=\"line\">                map.put(cnt,i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ans += cnt&gt;=k?map.get(cnt-k+<span class=\"number\">1</span>)+<span class=\"number\">1</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/count-the-number-of-good-partitions/\">2963. Count the Number of Good Partitions</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>动态规划，记数组长度为 n，区间 [0,n-1] 存在 k (1&lt;=k&lt;n) 个最小划分，最小划分意味着该划分内不存在更小的划分，则问题的答案为 2^(k-1)。<br>\n定义长度为 k+1 数组 dp,dp [i] 表示考虑前 i 个划分区间的划分方案数，考虑第 j 个区间时，有 2 种情况，1：与前一个区间合并为一个区间，方案数为 dp [j-1]，2：不合并，方案数也为 dp [j-1]，可得状态转移方程 dp [j] = 2*dp [j-1]，初始状态为 dp [1] = 1; 每个状态只由上个状态转移而来，省去数组。那么怎样找最小划分呢？每个划分由两个数决定，即区间的左右端点，现在我们固定其中一个端点找另一个端点，这里我们选左端点，从左到右第一个区间的左端点一定是 0，只要我们找到第一个区间的右端点，第二个区间的左端点也就确定了，即第一个区间的右端点加一，这样我们就找到了第一个区间，用这样的方法可以找到所有的区间，那么右端点要怎么寻找呢，我们知道，各个区间之间的交集为空，也即区间每包含一个数，必须包含数组中所有的这些数，怎样保证我们的区间满足以上性质呢，现在我们从左到右遍历，对于下标 i 的数 j，我们将右端点更新为 j 在数组最后出现的下标，如果右端点等于 i，表示 [左端点，i] 这是一个划分</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">numberOfGoodPartitions</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"comment\">// 记录每个数出现的最后一个位置</span></span><br><span class=\"line\">        Map&lt;Integer,Integer&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            map.put(nums[i],i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mo = <span class=\"number\">1000000007</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 记录上一次区间划分的结果</span></span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 记录区间右端点</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> next = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[i];</span><br><span class=\"line\">            next = Math.max(next,map.get(temp));</span><br><span class=\"line\">            <span class=\"comment\">// 遍历到右端点时，可以进行划分，将结果乘以2</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(next != i) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            ans = ans==<span class=\"number\">0</span>?<span class=\"number\">1</span>:(ans*<span class=\"number\">2</span>)%mo;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2023/10/18/leetcode-weekly-contest366/",
            "url": "https://liukplus.github.io.com/2023/10/18/leetcode-weekly-contest366/",
            "title": "leetcode-weekly-contest366",
            "date_published": "2023-10-18T14:55:58.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>排名</code> <br>\n<img src=\"\" alt=\"\"></p>\n<h1 id=\"第场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第场周赛\">#</a> <a href=\"\">第场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.com/contest/weekly-contest-366/problems/apply-operations-on-array-to-maximize-sum-of-squares/\">2897. 对数组执行操作使平方和最大</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxSum</span><span class=\"params\">(List&lt;Integer&gt; A, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> count[] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">32</span>];</span><br><span class=\"line\">    <span class=\"keyword\">long</span> res = <span class=\"number\">0</span>, cur = <span class=\"number\">0</span>, mod = <span class=\"number\">1000000007</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> a : A)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">32</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((a &amp; (<span class=\"number\">1</span> &lt;&lt; i)) != <span class=\"number\">0</span>)</span><br><span class=\"line\">                count[i]++;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; k; j++) &#123;</span><br><span class=\"line\">        cur = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">32</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (count[i] &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                count[i]--;</span><br><span class=\"line\">                cur += <span class=\"number\">1</span> &lt;&lt; i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res = (res + cur * cur % mod) % mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况\"><a class=\"markdownIt-Anchor\" href=\"#运行情况\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-2\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-2\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-3\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-3\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-4\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-4\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n",
            "tags": [
                "leetcode contest"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2023/10/18/leetcode-biweekly-contest115/",
            "url": "https://liukplus.github.io.com/2023/10/18/leetcode-biweekly-contest115/",
            "title": "leetcode-biweekly-contest115",
            "date_published": "2023-10-18T14:53:16.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>排名</code> <br>\n<img src=\"\" alt=\"\"></p>\n<h1 id=\"第115场双周赛\"><a class=\"markdownIt-Anchor\" href=\"#第115场双周赛\">#</a> <a href=\"https://leetcode.cn/contest/biweekly-contest-115/\">第 115 场双周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/last-visited-integers/\">2899. 上一个遍历的整数</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;Integer&gt; <span class=\"title\">lastVisitedIntegers</span><span class=\"params\">(List&lt;String&gt; words)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;Integer&gt; arr = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">        List&lt;Integer&gt; ans = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = words.size();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(String s:words)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">&quot;prev&quot;</span>))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> size = arr.size();</span><br><span class=\"line\">                cnt++;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(size&lt;cnt)&#123;</span><br><span class=\"line\">                    ans.add(-<span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    ans.add(arr.get(size-cnt));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                arr.add(Integer.parseInt(s));</span><br><span class=\"line\">                cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况\"><a class=\"markdownIt-Anchor\" href=\"#运行情况\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/longest-unequal-adjacent-groups-subsequence-i/\">2900. 最长相邻不相等子序列 I</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">getWordsInLongestSubsequence</span><span class=\"params\">(<span class=\"keyword\">int</span> n, String[] words, <span class=\"keyword\">int</span>[] groups)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;String&gt; ans = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">        ans.add(words[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(groups[i] != groups[i-<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                ans.add(words[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-2\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-2\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/longest-unequal-adjacent-groups-subsequence-ii/\">2901. 最长相邻不相等子序列 II</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">getWordsInLongestSubsequence</span><span class=\"params\">(<span class=\"keyword\">int</span> n, String[] words, <span class=\"keyword\">int</span>[] groups)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;String&gt;[] dp = <span class=\"keyword\">new</span> ArrayList[n];</span><br><span class=\"line\">        List&lt;String&gt; ans = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            dp[i] = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">            String str = words[i];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> maxCnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> maxIndex = -<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i-<span class=\"number\">1</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                String temp = words[j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(groups[i] == groups[j]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(compare(str,temp))&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(dp[j].size()&gt;maxCnt)&#123;</span><br><span class=\"line\">                        maxIndex = j;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    maxCnt = Math.max(maxCnt,dp[j].size());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(maxIndex != -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    dp[i] = <span class=\"keyword\">new</span> ArrayList(dp[maxIndex]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            dp[i].add(str);</span><br><span class=\"line\">            ans = ans.size()&gt;dp[i].size()?ans:dp[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">compare</span><span class=\"params\">(String s1,String s2)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n1 = s1.length();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n2 = s2.length();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n1 != n2) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> index = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n1 &amp;&amp; cnt&lt;=<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s1.charAt(i) != s2.charAt(i))&#123;</span><br><span class=\"line\">                cnt++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cnt == <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-3\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-3\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/count-of-sub-multisets-with-bounded-sum/\">2902. 和带限制的子多重集合的数目</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">countSubMultisets</span><span class=\"params\">(List&lt;Integer&gt; nums, <span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> MOD = <span class=\"number\">1_000_000_007</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> total = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> cnt = <span class=\"keyword\">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : nums) &#123;</span><br><span class=\"line\">            total += x;</span><br><span class=\"line\">            cnt.merge(x, <span class=\"number\">1</span>, Integer::sum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (l &gt; total) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        r = Math.min(r, total);</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] f = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[r + <span class=\"number\">1</span>];</span><br><span class=\"line\">        f[<span class=\"number\">0</span>] = cnt.getOrDefault(<span class=\"number\">0</span>, <span class=\"number\">0</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">        cnt.remove(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> e : cnt.entrySet()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = e.getKey(), c = e.getValue();</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[] newF = f.clone();</span><br><span class=\"line\">            sum = Math.min(sum + x * c, r); <span class=\"comment\">// 到目前为止，能选的元素和至多为 sum</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = x; j &lt;= sum; j++) &#123; <span class=\"comment\">// 把循环上界从 r 改成 sum 可以快不少</span></span><br><span class=\"line\">                newF[j] = (newF[j] + newF[j - x]) % MOD;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (j &gt;= (c + <span class=\"number\">1</span>) * x) &#123;</span><br><span class=\"line\">                    newF[j] = (newF[j] - f[j - (c + <span class=\"number\">1</span>) * x] + MOD) % MOD; <span class=\"comment\">// 避免减法产生负数</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            f = newF;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = l; i &lt;= r; ++i) &#123;</span><br><span class=\"line\">            ans = (ans + f[i]) % MOD;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-4\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-4\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n",
            "tags": [
                "leetcode contest"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2023/10/18/leetcode-weekly-contest367/",
            "url": "https://liukplus.github.io.com/2023/10/18/leetcode-weekly-contest367/",
            "title": "leetcode-weekly-contest367",
            "date_published": "2023-10-18T14:50:26.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>排名</code> <br>\n<img src=\"\" alt=\"\"></p>\n<h1 id=\"第场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第场周赛\">#</a> <a href=\"\">第场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps/\">1269. 停在原地的方案数</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">numWays</span><span class=\"params\">(<span class=\"keyword\">int</span> steps, <span class=\"keyword\">int</span> arrLen)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = Math.min(steps,arrLen)+<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mo = <span class=\"number\">1000000007</span>;</span><br><span class=\"line\">        dp[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;steps;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> last = dp[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;n-<span class=\"number\">1</span>;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(Math.max(last,dp[j]) == <span class=\"number\">0</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">long</span> temp = dp[j];</span><br><span class=\"line\">                dp[j] = (dp[j]+dp[j+<span class=\"number\">1</span>]+last)%mo;</span><br><span class=\"line\">                last = temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)dp[<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况\"><a class=\"markdownIt-Anchor\" href=\"#运行情况\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/max-dot-product-of-two-subsequences/\">1458. 两个子序列的最大点积</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxDotProduct</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums1, <span class=\"keyword\">int</span>[] nums2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m = nums1.length, n = nums2.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n+<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> flag = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=n-<span class=\"number\">1</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> temp = dp[j]+nums1[i]*nums2[j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(temp&gt;=dp[j+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                    dp[j+<span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">                    flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">                dp[j+<span class=\"number\">1</span>] = Math.max(dp[j+<span class=\"number\">1</span>],dp[j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag) <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nums1[<span class=\"number\">0</span>]&gt;<span class=\"number\">0</span>?Arrays.stream(nums1).min().getAsInt()*Arrays.stream(nums2).max().getAsInt():Arrays.stream(nums1).max().getAsInt()*Arrays.stream(nums2).min().getAsInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-2\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-2\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons/\">1420. 生成数组</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">numOfArrays</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[][][] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n+<span class=\"number\">1</span>][k+<span class=\"number\">1</span>][m+<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mo = <span class=\"number\">1000000007</span>;</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=k;j&gt;<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">long</span> sum = dp[i-<span class=\"number\">1</span>][j-<span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x=<span class=\"number\">1</span>;x&lt;=m;x++)&#123;</span><br><span class=\"line\">                    dp[i][j][x] = (dp[i-<span class=\"number\">1</span>][j][x]*x)%mo;</span><br><span class=\"line\">                    dp[i][j][x] = (sum+dp[i][j][x])%mo;</span><br><span class=\"line\">                    sum = (sum+dp[i-<span class=\"number\">1</span>][j-<span class=\"number\">1</span>][x])%mo;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            dp[i][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=m;i++)&#123;</span><br><span class=\"line\">            ans = (ans+dp[n][k][i])%mo;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-3\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-3\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/sliding-window-maximum/\">239. 滑动窗口最大值</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] maxSlidingWindow(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k) &#123;</span><br><span class=\"line\">        ArrayDeque&lt;Integer&gt; q = <span class=\"keyword\">new</span> ArrayDeque();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] ans = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n-k+<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(!q.isEmpty() &amp;&amp; q.peekLast()&lt;temp)&#123;</span><br><span class=\"line\">                q.pollLast();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            q.offer(temp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans[<span class=\"number\">0</span>] = q.peekFirst();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=k;j&lt;n;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> p = nums[j-k];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(q.peekFirst() == p)&#123;</span><br><span class=\"line\">                q.pollFirst();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[j];</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(!q.isEmpty() &amp;&amp; q.peekLast()&lt;temp)&#123;</span><br><span class=\"line\">                q.pollLast();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            q.offer(temp);</span><br><span class=\"line\">            ans[j-k+<span class=\"number\">1</span>] = q.peekFirst();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-4\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-4\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n",
            "tags": [
                "leetcode contest"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2023/10/18/Template%20copy/",
            "url": "https://liukplus.github.io.com/2023/10/18/Template%20copy/",
            "title": "Template",
            "date_published": "2023-10-18T14:46:20.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>排名</code> <br>\n<img src=\"\" alt=\"\"></p>\n<h1 id=\"第场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第场周赛\">#</a> <a href=\"\">第场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/merge-k-sorted-lists/\">23. 合并 K 个升序链表</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * public class ListNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     int val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode next;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode() &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ListNode <span class=\"title\">mergeKLists</span><span class=\"params\">(ListNode[] lists)</span> </span>&#123;</span><br><span class=\"line\">        ListNode dh = <span class=\"keyword\">new</span> ListNode();</span><br><span class=\"line\">        ListNode cur = dh;</span><br><span class=\"line\">        Queue&lt;ListNode&gt; q = <span class=\"keyword\">new</span> PriorityQueue&lt;ListNode&gt;((a,b) -&gt; (a.val-b.val));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(ListNode l:lists)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(l == <span class=\"keyword\">null</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            q.offer(l);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!q.isEmpty())&#123;</span><br><span class=\"line\">            ListNode t = q.poll();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t.next!=<span class=\"keyword\">null</span>) q.offer(t.next);</span><br><span class=\"line\">            t.next = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            cur.next = t;</span><br><span class=\"line\">            cur = t;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dh.next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况\"><a class=\"markdownIt-Anchor\" href=\"#运行情况\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/painting-the-walls/\">2742. 给墙壁刷油漆</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">paintWalls</span><span class=\"params\">(<span class=\"keyword\">int</span>[] cost, <span class=\"keyword\">int</span>[] time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = cost.length;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> f = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\">        Arrays.fill(f, Integer.MAX_VALUE / <span class=\"number\">2</span>); <span class=\"comment\">// 防止加法溢出</span></span><br><span class=\"line\">        f[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> c = cost[i], t = time[i] + <span class=\"number\">1</span>;  <span class=\"comment\">// 注意这里加一了</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = n; j &gt; <span class=\"number\">0</span>; j--)</span><br><span class=\"line\">                f[j] = Math.min(f[j], f[Math.max(j - t, <span class=\"number\">0</span>)] + c);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> f[n];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-2\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-2\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/count-subarrays-with-fixed-bounds/\">2444. 统计定界子数组的数目</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">countSubarrays</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> minK, <span class=\"keyword\">int</span> maxK)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> oi = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mi = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ma = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(minK == maxK)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> t = nums[i];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> j = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(t != minK)&#123;</span><br><span class=\"line\">                    i=j;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(j&lt;n &amp;&amp; nums[j] == minK) j++;</span><br><span class=\"line\">                <span class=\"keyword\">long</span> l = j-i;</span><br><span class=\"line\">                ans += l*(l+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">                i=j;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> t = nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t&lt;minK || t&gt;maxK)&#123;</span><br><span class=\"line\">                oi = i;</span><br><span class=\"line\">                mi = -<span class=\"number\">1</span>;</span><br><span class=\"line\">                ma = -<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t&lt;maxK &amp;&amp; t&gt;minK)&#123;</span><br><span class=\"line\">                ans += Math.max(Math.min(mi,ma) - oi,<span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t == minK)&#123;</span><br><span class=\"line\">                ans += Math.max(ma-oi,<span class=\"number\">0</span>);</span><br><span class=\"line\">                mi = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t == maxK)&#123;</span><br><span class=\"line\">                ans += Math.max(mi-oi,<span class=\"number\">0</span>);</span><br><span class=\"line\">                ma = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-3\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-3\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/longest-path-with-different-adjacent-characters/\">2246. 相邻字符不同的最长路径</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    List&lt;List&lt;Integer&gt;&gt; graph = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">longestPath</span><span class=\"params\">(<span class=\"keyword\">int</span>[] parent, String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = parent.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            graph.add(<span class=\"keyword\">new</span> ArrayList());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(parent[i] != -<span class=\"number\">1</span>) graph.get(parent[i]).add(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dfs(<span class=\"number\">0</span>,s);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> index,String s)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> longest = <span class=\"number\">0</span>, secondLongest = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:graph.get(index))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> len = dfs(i,s);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s.charAt(index) == s.charAt(i))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(len&gt;longest)&#123;</span><br><span class=\"line\">                secondLongest = longest;</span><br><span class=\"line\">                longest = len;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(len&gt;secondLongest)&#123;</span><br><span class=\"line\">                secondLongest = len;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans = Math.max(ans,longest+secondLongest+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> longest+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-4\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-4\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题一-2\"><a class=\"markdownIt-Anchor\" href=\"#问题一-2\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/constrained-subsequence-sum/\">1425. 带限制的子序列和</a></p>\n<h3 id=\"解题思路-5\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-5\">#</a> 解题思路</h3>\n<h3 id=\"代码-5\"><a class=\"markdownIt-Anchor\" href=\"#代码-5\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">constrainedSubsetSum</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        Deque&lt;Integer&gt; dq = <span class=\"keyword\">new</span> LinkedList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">            nums[i] += !dq.isEmpty() ? nums[dq.peekFirst()] : <span class=\"number\">0</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">while</span> (!dq.isEmpty() &amp;&amp; (i - dq.peekFirst() &gt;= k || nums[i] &gt;= nums[dq.peekLast()])) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (nums[i] &gt;= nums[dq.peekLast()]) dq.pollLast();</span><br><span class=\"line\">                <span class=\"keyword\">else</span> dq.pollFirst();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i] &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                dq.offerLast(i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.stream(nums).max().getAsInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-5\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-5\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题二-2\"><a class=\"markdownIt-Anchor\" href=\"#问题二-2\">#</a> 问题二</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-6\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-6\">#</a> 解题思路</h3>\n<h3 id=\"代码-6\"><a class=\"markdownIt-Anchor\" href=\"#代码-6\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-6\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-6\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题三-2\"><a class=\"markdownIt-Anchor\" href=\"#问题三-2\">#</a> 问题三</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-7\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-7\">#</a> 解题思路</h3>\n<h3 id=\"代码-7\"><a class=\"markdownIt-Anchor\" href=\"#代码-7\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-7\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-7\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n<h2 id=\"问题四-2\"><a class=\"markdownIt-Anchor\" href=\"#问题四-2\">#</a> 问题四</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-8\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-8\">#</a> 解题思路</h3>\n<h3 id=\"代码-8\"><a class=\"markdownIt-Anchor\" href=\"#代码-8\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-8\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-8\">#</a> 运行情况</h3>\n<p><img src=\"\" alt=\"\"></p>\n",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2023/10/18/Template/",
            "url": "https://liukplus.github.io.com/2023/10/18/Template/",
            "title": "Template",
            "date_published": "2023-10-18T14:46:20.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code></p>\n<h1 id=\"第场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第场周赛\">#</a> <a href=\"\">第场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\">## 问题二</span><br><span class=\"line\">[]()</span><br><span class=\"line\">### 解题思路</span><br><span class=\"line\">### 代码</span><br><span class=\"line\">```java</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2023/10/02/leetcode-weekly-contest364/",
            "url": "https://liukplus.github.io.com/2023/10/02/leetcode-weekly-contest364/",
            "title": "leetcode-weekly-contest364",
            "date_published": "2023-10-02T15:49:11.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><hr>\n<h2 id=\"title-leetcode-weekly-contest363date-2023-09-18-235209tags-leetcode-contest\"><a class=\"markdownIt-Anchor\" href=\"#title-leetcode-weekly-contest363date-2023-09-18-235209tags-leetcode-contest\">#</a> title: leetcode-weekly-contest363<br>\ndate: 2023-09-18 23:52:09<br>\ntags: leetcode contest</h2>\n<h1 id=\"第363场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第363场周赛\">#</a> <a href=\"https://leetcode.cn/contest/weekly-contest-363/\">第 363 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-operations-to-collect-elements/\">2859. 计算 K 置位下标对应元素的和</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">sumIndicesWithKSetBits</span><span class=\"params\">(List&lt;Integer&gt; nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(k == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> nums.get(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.size();</span><br><span class=\"line\">        nums.set(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> bits = i%<span class=\"number\">2</span>==<span class=\"number\">0</span>?nums.get(i/<span class=\"number\">2</span>):nums.get(i-<span class=\"number\">1</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\">            res += bits == k?nums.get(i):<span class=\"number\">0</span>;</span><br><span class=\"line\">            nums.set(i,bits);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况\"><a class=\"markdownIt-Anchor\" href=\"#运行情况\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_weekly_contest363_screenshots%5Cp1.png\" alt=\"\"></p>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-number-of-operations-to-make-array-empty/\">2860. 让所有学生保持开心的分组方法数</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">countWays</span><span class=\"params\">(List&lt;Integer&gt; nums)</span> </span>&#123;</span><br><span class=\"line\">        Collections.sort(nums);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.size();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = nums.get(<span class=\"number\">0</span>)&gt;<span class=\"number\">0</span>?<span class=\"number\">1</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums.get(i)&lt;i+<span class=\"number\">1</span> &amp;&amp; nums.get(i+<span class=\"number\">1</span>)&gt;i+<span class=\"number\">1</span>) ans++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nums.get(n-<span class=\"number\">1</span>)&lt;n?ans+<span class=\"number\">1</span>:ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-2\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-2\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_weekly_contest363_screenshots%5Cp2.png\" alt=\"\"></p>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-number-of-alloys/\">2861. 最大合金数</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxNumberOfAlloys</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> k, <span class=\"keyword\">int</span> budget, List&lt;List&lt;Integer&gt;&gt; composition, List&lt;Integer&gt; stock, List&lt;Integer&gt; cost)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> right = calculateUpperBound(composition.get(i),stock,cost,n,budget);</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(left&lt;right)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> mid = (right-left+<span class=\"number\">1</span>)/<span class=\"number\">2</span>+left;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(CheckIfWithinTheBudget(composition.get(i),stock,cost,n,budget,mid))&#123;</span><br><span class=\"line\">                    left = mid;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    right = mid-<span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ans = Math.max(left,ans);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">CheckIfWithinTheBudget</span><span class=\"params\">(List&lt;Integer&gt; composition,List&lt;Integer&gt; stock,List&lt;Integer&gt; cost,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> budget,<span class=\"keyword\">int</span> alloysToCreate)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n &amp;&amp; budget&gt;=<span class=\"number\">0</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> metalStock = stock.get(i);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> metalNeeded = composition.get(i)*alloysToCreate;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(metalStock &gt;= metalNeeded) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            budget -= (metalNeeded-metalStock)*cost.get(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> budget&gt;=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">calculateUpperBound</span><span class=\"params\">(List&lt;Integer&gt; composition,List&lt;Integer&gt; stock,List&lt;Integer&gt; cost,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> budget)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> upperBound = budget;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n &amp;&amp; upperBound&lt;=budget;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> metalStock = stock.get(i);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> metalNeeded = composition.get(i);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = (budget/cost.get(i)+metalStock)/metalNeeded;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp&gt;budget) upperBound = temp;    </span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                upperBound = Math.min(temp,upperBound);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> upperBound;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-3\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-3\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_weekly_contest363_screenshots%5Cp3.png\" alt=\"\"></p>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-element-sum-of-a-complete-subset-of-indices/\">2862. 完全子集的最大元素和</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">maximumSum</span><span class=\"params\">(List&lt;Integer&gt; nums)</span> </span>&#123;</span><br><span class=\"line\">        Map&lt;Integer,Long&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.size();</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> re = calculateRe(i+<span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">long</span> temp = map.getOrDefault(re,<span class=\"number\">0L</span>)+nums.get(i);</span><br><span class=\"line\">            map.put(re,temp);</span><br><span class=\"line\">            ans = Math.max(ans,temp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">calculateRe</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;num&gt;=i &amp;&amp; i&lt;=(<span class=\"keyword\">int</span>)Math.sqrt(num);i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(num&gt;=i &amp;&amp; num%i==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                num/=i;</span><br><span class=\"line\">                cnt++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cnt%<span class=\"number\">2</span> == <span class=\"number\">1</span>) ans *= i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans*num;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-4\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-4\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_weekly_contest363_screenshots%5Cp4.png\" alt=\"\"></p>\n",
            "tags": [
                "leetcode contest"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2023/10/02/leetcode-weekly-contest365/",
            "url": "https://liukplus.github.io.com/2023/10/02/leetcode-weekly-contest365/",
            "title": "leetcode-weekly-contest365",
            "date_published": "2023-10-02T14:50:08.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"第365场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第365场周赛\">#</a> <a href=\"https://leetcode.cn/contest/weekly-contest-365/\">第 365 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-value-of-an-ordered-triplet-i/\">有序三元组中的最大值 I</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">maximumTripletValue</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n-<span class=\"number\">2</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            dp[i] = Math.max(dp[i+<span class=\"number\">1</span>],nums[i+<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> max = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            ans = Math.max(ans,<span class=\"number\">1L</span>*(max-nums[i])*dp[i]);</span><br><span class=\"line\">            max = Math.max(max,nums[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况\"><a class=\"markdownIt-Anchor\" href=\"#运行情况\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_weekly_contest365_screenshots%5Cp1.png\" alt=\"\"></p>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-value-of-an-ordered-triplet-ii/\">2874. 有序三元组中的最大值 II</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">maximumTripletValue</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n-<span class=\"number\">2</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            dp[i] = Math.max(dp[i+<span class=\"number\">1</span>],nums[i+<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> max = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            ans = Math.max(ans,<span class=\"number\">1L</span>*(max-nums[i])*dp[i]);</span><br><span class=\"line\">            max = Math.max(max,nums[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-2\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-2\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_biweekly_contest114_screenshots%5Cp1.png\" alt=\"\"></p>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-size-subarray-in-infinite-array/\">2875. 无限数组的最短子数组</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minSizeSubarray</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> pre = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Map&lt;Long,Integer&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = n+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</span><br><span class=\"line\">            sum += i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(target%sum==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)(target/sum*n);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> re = (<span class=\"keyword\">int</span>)(target/sum*n);</span><br><span class=\"line\">        target = (<span class=\"keyword\">int</span>)(target%sum);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n &amp;&amp; ans&gt;<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            pre += nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(map.containsKey(pre-target))&#123;</span><br><span class=\"line\">                ans = Math.min(i-map.get(pre-target),ans);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            map.put(pre,i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n &amp;&amp; ans&gt;<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            pre += nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(map.containsKey(pre-target))&#123;</span><br><span class=\"line\">                ans = Math.min(i+n-map.get(pre-target),ans);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            map.put(pre,i+n);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans&gt;n?-<span class=\"number\">1</span>:re+ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-3\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-3\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_weekly_contest365_screenshots%5Cp3.png\" alt=\"\"></p>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/count-visited-nodes-in-a-directed-graph/\">2876. 有向图访问计数</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">fillCycle</span><span class=\"params\">(List&lt;Integer&gt; edges, <span class=\"keyword\">boolean</span>[] visited, <span class=\"keyword\">int</span>[] result, <span class=\"keyword\">int</span> start)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> length = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x = start; !visited[x]; x = edges.get(x)) &#123;</span><br><span class=\"line\">            visited[x] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            length++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        result[start] = length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x = edges.get(start); x != start; x = edges.get(x)) &#123;</span><br><span class=\"line\">            result[x] = length;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] countVisitedNodes(List&lt;Integer&gt; edges) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = edges.size();</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] indegree = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] result = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span>[] visited = <span class=\"keyword\">new</span> <span class=\"keyword\">boolean</span>[n];</span><br><span class=\"line\">        Queue&lt;Integer&gt; q = <span class=\"keyword\">new</span> LinkedList&lt;&gt;();</span><br><span class=\"line\">        Stack&lt;Integer&gt; s = <span class=\"keyword\">new</span> Stack&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> e : edges) &#123;</span><br><span class=\"line\">            indegree[e]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (indegree[i] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                q.add(i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!q.isEmpty()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = q.remove();</span><br><span class=\"line\">            s.push(x);</span><br><span class=\"line\">            visited[x] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (--indegree[edges.get(x)] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                q.add(edges.get(x));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!visited[i]) &#123;</span><br><span class=\"line\">                fillCycle(edges, visited, result, i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!s.isEmpty()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = s.pop();</span><br><span class=\"line\">            result[x] = result[edges.get(x)] + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-4\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-4\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_weekly_contest365_screenshots%5Cp4.png\" alt=\"\"></p>\n",
            "tags": [
                "leetcode contest"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2023/10/02/leetcode-biweekly-contest114/",
            "url": "https://liukplus.github.io.com/2023/10/02/leetcode-biweekly-contest114/",
            "title": "leetcode-Biweekly-contest114",
            "date_published": "2023-10-01T16:09:31.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"第114场双周赛\"><a class=\"markdownIt-Anchor\" href=\"#第114场双周赛\">#</a> <a href=\"https://leetcode.cn/contest/biweekly-contest-114/\">第 114 场双周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-operations-to-collect-elements/\">收集元素的最少操作次数</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minOperations</span><span class=\"params\">(List&lt;Integer&gt; nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        Set&lt;Integer&gt; set = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.size();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i=n-<span class=\"number\">1</span>;set.size()&lt;k &amp;&amp; i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> t = nums.get(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t&lt;=k) set.add(t);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n-<span class=\"number\">1</span>-i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况\"><a class=\"markdownIt-Anchor\" href=\"#运行情况\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_biweekly_contest114_screenshots%5Cp1.png\" alt=\"\"></p>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-number-of-operations-to-make-array-empty/\">使数组为空的最少操作次数</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minOperations</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        Map&lt;Integer,Integer&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> t = nums[i];</span><br><span class=\"line\">            map.put(t,map.getOrDefault(t,<span class=\"number\">0</span>)+<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(Integer i:map.keySet())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> v = map.get(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">            ans += (v+<span class=\"number\">2</span>)/<span class=\"number\">3</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-2\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-2\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_biweekly_contest114_screenshots%5Cp2.png\" alt=\"\"></p>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/split-array-into-maximum-number-of-subarrays/\">将数组分割成最多数目的子数组</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxSubarrays</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sum = Integer.MAX_VALUE;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            sum &amp;= nums[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sum != <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        sum = Integer.MAX_VALUE; </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            sum &amp;= nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                ans++;</span><br><span class=\"line\">                sum = Integer.MAX_VALUE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-3\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-3\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_biweekly_contest114_screenshots%5Cp3.png\" alt=\"\"></p>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-number-of-k-divisible-components/\">可以被 K 整除连通块的最大数目</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxKDivisibleComponents</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span>[][] edges, <span class=\"keyword\">int</span>[] values, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] indegree = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">        List&lt;Integer&gt;[] g = <span class=\"keyword\">new</span> ArrayList[n];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            g[i] = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] e:edges)&#123;</span><br><span class=\"line\">            indegree[e[<span class=\"number\">0</span>]]++;</span><br><span class=\"line\">            indegree[e[<span class=\"number\">1</span>]]++;</span><br><span class=\"line\">            g[e[<span class=\"number\">0</span>]].add(e[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            g[e[<span class=\"number\">1</span>]].add(e[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span>[] vi = <span class=\"keyword\">new</span> <span class=\"keyword\">boolean</span>[n];</span><br><span class=\"line\">        Queue&lt;Integer&gt; q = <span class=\"keyword\">new</span> ArrayDeque();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(indegree[i] == <span class=\"number\">1</span>) q.offer(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!q.isEmpty())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> t = q.poll();</span><br><span class=\"line\">            vi[t] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(values[t]%k == <span class=\"number\">0</span>) ans++;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(Integer next:g[t])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(vi[next]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                values[next] = (values[next]+values[t])%k;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(--indegree[next] == <span class=\"number\">1</span>) q.offer(next);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Math.max(ans,<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-4\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-4\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_biweekly_contest114_screenshots%5Cp4.png\" alt=\"\"></p>\n",
            "tags": [
                "leetcode contest"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2023/09/18/leetcode-weekly-contest363/",
            "url": "https://liukplus.github.io.com/2023/09/18/leetcode-weekly-contest363/",
            "title": "leetcode-weekly-contest363",
            "date_published": "2023-09-18T15:52:09.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"第363场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第363场周赛\">#</a> <a href=\"https://leetcode.cn/contest/weekly-contest-363/\">第 363 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-operations-to-collect-elements/\">2859. 计算 K 置位下标对应元素的和</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">sumIndicesWithKSetBits</span><span class=\"params\">(List&lt;Integer&gt; nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(k == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> nums.get(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.size();</span><br><span class=\"line\">        nums.set(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> bits = i%<span class=\"number\">2</span>==<span class=\"number\">0</span>?nums.get(i/<span class=\"number\">2</span>):nums.get(i-<span class=\"number\">1</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\">            res += bits == k?nums.get(i):<span class=\"number\">0</span>;</span><br><span class=\"line\">            nums.set(i,bits);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况\"><a class=\"markdownIt-Anchor\" href=\"#运行情况\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_weekly_contest363_screenshots%5Cp1.png\" alt=\"\"></p>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-number-of-operations-to-make-array-empty/\">2860. 让所有学生保持开心的分组方法数</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">countWays</span><span class=\"params\">(List&lt;Integer&gt; nums)</span> </span>&#123;</span><br><span class=\"line\">        Collections.sort(nums);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.size();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = nums.get(<span class=\"number\">0</span>)&gt;<span class=\"number\">0</span>?<span class=\"number\">1</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums.get(i)&lt;i+<span class=\"number\">1</span> &amp;&amp; nums.get(i+<span class=\"number\">1</span>)&gt;i+<span class=\"number\">1</span>) ans++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nums.get(n-<span class=\"number\">1</span>)&lt;n?ans+<span class=\"number\">1</span>:ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-2\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-2\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_weekly_contest363_screenshots%5Cp2.png\" alt=\"\"></p>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-number-of-alloys/\">2861. 最大合金数</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxNumberOfAlloys</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> k, <span class=\"keyword\">int</span> budget, List&lt;List&lt;Integer&gt;&gt; composition, List&lt;Integer&gt; stock, List&lt;Integer&gt; cost)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> right = calculateUpperBound(composition.get(i),stock,cost,n,budget);</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(left&lt;right)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> mid = (right-left+<span class=\"number\">1</span>)/<span class=\"number\">2</span>+left;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(CheckIfWithinTheBudget(composition.get(i),stock,cost,n,budget,mid))&#123;</span><br><span class=\"line\">                    left = mid;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    right = mid-<span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ans = Math.max(left,ans);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">CheckIfWithinTheBudget</span><span class=\"params\">(List&lt;Integer&gt; composition,List&lt;Integer&gt; stock,List&lt;Integer&gt; cost,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> budget,<span class=\"keyword\">int</span> alloysToCreate)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n &amp;&amp; budget&gt;=<span class=\"number\">0</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> metalStock = stock.get(i);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> metalNeeded = composition.get(i)*alloysToCreate;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(metalStock &gt;= metalNeeded) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            budget -= (metalNeeded-metalStock)*cost.get(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> budget&gt;=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">calculateUpperBound</span><span class=\"params\">(List&lt;Integer&gt; composition,List&lt;Integer&gt; stock,List&lt;Integer&gt; cost,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> budget)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> upperBound = budget;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n &amp;&amp; upperBound&lt;=budget;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> metalStock = stock.get(i);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> metalNeeded = composition.get(i);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = (budget/cost.get(i)+metalStock)/metalNeeded;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp&gt;budget) upperBound = temp;    </span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                upperBound = Math.min(temp,upperBound);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> upperBound;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-3\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-3\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_weekly_contest363_screenshots%5Cp3.png\" alt=\"\"></p>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-element-sum-of-a-complete-subset-of-indices/\">2862. 完全子集的最大元素和</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">maximumSum</span><span class=\"params\">(List&lt;Integer&gt; nums)</span> </span>&#123;</span><br><span class=\"line\">        Map&lt;Integer,Long&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.size();</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> re = calculateRe(i+<span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">long</span> temp = map.getOrDefault(re,<span class=\"number\">0L</span>)+nums.get(i);</span><br><span class=\"line\">            map.put(re,temp);</span><br><span class=\"line\">            ans = Math.max(ans,temp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">calculateRe</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;num&gt;=i &amp;&amp; i&lt;=(<span class=\"keyword\">int</span>)Math.sqrt(num);i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(num&gt;=i &amp;&amp; num%i==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                num/=i;</span><br><span class=\"line\">                cnt++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cnt%<span class=\"number\">2</span> == <span class=\"number\">1</span>) ans *= i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans*num;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-4\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-4\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_weekly_contest363_screenshots%5Cp4.png\" alt=\"\"></p>\n",
            "tags": [
                "leetcode contest"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2023/09/18/leetcode-biweekly-contest113/",
            "url": "https://liukplus.github.io.com/2023/09/18/leetcode-biweekly-contest113/",
            "title": "leetcode-biweekly-contest113",
            "date_published": "2023-09-18T15:51:07.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"第113场双周赛\"><a class=\"markdownIt-Anchor\" href=\"#第113场双周赛\">#</a> <a href=\"https://leetcode.cn/contest/biweekly-contest-113/\">第 113 场双周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-right-shifts-to-sort-the-array/\">使数组成为递增数组的最少右移次数</a></p>\n<p><code>给你一个长度为 n 下标从 0 开始的数组 nums ，数组中的元素为互不相同的正整数。请你返回让 nums 成为递增数组的 最少右移 次数，如果无法得到递增数组，返回 -1 。一次 右移 指的是同时对所有下标进行操作，将下标为 i 的元素移动到下标 (i + 1) % n 处。</code></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">假设nums的长度为n。当nums本身就是递增数组，答案显然为0，否则，nums能够通过右移得到递增数组sortedArray等价于nums是通过这个递增数组sortedArray左移得到的，假设左移次数为shift（shift&gt;1 &amp;&amp; shift&lt;n），则满足nums[n-1]&lt;nums[0]，nums[i-1]&lt;nums[i]，nums[j-1]&lt;nums[j]其中1&lt;i&lt;=shift，shift&lt;j&lt;n。当上述条件不满足时，返回-1，否则返回shift。</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minimumRightShifts</span><span class=\"params\">(List&lt;Integer&gt; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.size();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums.get(i)&lt;nums.get(i-<span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i == n) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums.get(n-<span class=\"number\">1</span>)&gt;nums.get(<span class=\"number\">0</span>)) <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+<span class=\"number\">1</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums.get(j)&lt;nums.get(j-<span class=\"number\">1</span>)) <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n-i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况\"><a class=\"markdownIt-Anchor\" href=\"#运行情况\">#</a> 运行情况</h3>\n<p><img src=\"Files%5Cleetcode_biweekly_contest113_screenshots%5Cp1.png\" alt=\"\"></p>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-array-length-after-pair-removals/\">2856. 删除数对后的最小数组长度</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minLengthAfterRemovals</span><span class=\"params\">(List&lt;Integer&gt; nums)</span> </span>&#123;</span><br><span class=\"line\">        Map&lt;Integer,Integer&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> maxCnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(Integer i:nums)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> cnt = map.getOrDefault(i,<span class=\"number\">0</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\">            map.put(i,cnt);</span><br><span class=\"line\">            maxCnt = Math.max(maxCnt,cnt);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.size();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(maxCnt&lt;=n/<span class=\"number\">2</span>) <span class=\"keyword\">return</span> n%<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span>*maxCnt-n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-2\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-2\">#</a> 运行情况</h3>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/count-pairs-of-points-with-distance-k/\">2857. 统计距离为 k 的点对</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">countPairs</span><span class=\"params\">(List&lt;List&lt;Integer&gt;&gt; coordinates, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        Map&lt;Pair&lt;Integer,Integer&gt;,Integer&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(List&lt;Integer&gt; cor:coordinates)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = cor.get(<span class=\"number\">0</span>), y = cor.get(<span class=\"number\">1</span>);</span><br><span class=\"line\">            Pair&lt;Integer,Integer&gt; p = <span class=\"keyword\">new</span> Pair(x,y);</span><br><span class=\"line\">            map.put(p,map.getOrDefault(p,<span class=\"number\">0</span>)+<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(Pair&lt;Integer,Integer&gt; cor:map.keySet())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = cor.getKey(), y = cor.getValue();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> t = map.get(cor);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(k == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                ans += <span class=\"number\">1L</span>*t*(t-<span class=\"number\">1</span>);</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=k;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> nx = x^j, ny = y^(k-j);</span><br><span class=\"line\">                Pair&lt;Integer,Integer&gt; p = <span class=\"keyword\">new</span> Pair(nx,ny);</span><br><span class=\"line\">                <span class=\"keyword\">int</span> cnt = map.getOrDefault(p,<span class=\"number\">0</span>);</span><br><span class=\"line\">                ans += <span class=\"number\">1L</span>*cnt*t;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)(ans/<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-3\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-3\">#</a> 运行情况</h3>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-edge-reversals-so-every-node-is-reachable/\">2858. 可以到达每一个节点的最少边反转次数</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">        List&lt;Set&lt;Integer&gt;&gt; g1 = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">        List&lt;Set&lt;Integer&gt;&gt; g2 = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] minEdgeReversals(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span>[][] edges) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            g1.add(<span class=\"keyword\">new</span> HashSet());</span><br><span class=\"line\">            g2.add(<span class=\"keyword\">new</span> HashSet());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] e:edges)&#123;</span><br><span class=\"line\">            g1.get(e[<span class=\"number\">0</span>]).add(e[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            g2.get(e[<span class=\"number\">1</span>]).add(e[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] ans = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">        Arrays.fill(ans,-<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ans[i] != -<span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(Integer j:g1.get(i))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ans[j] == -<span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                ans[i] = ans[j]-<span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(Integer j:g2.get(i))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ans[j] == -<span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                ans[i] = ans[j]+<span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ans[i] == -<span class=\"number\">1</span>) ans[i] = dfs(i,<span class=\"keyword\">new</span> <span class=\"keyword\">boolean</span>[n]);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(Integer j:g1.get(i))&#123;</span><br><span class=\"line\">                ans[j] = ans[i]+<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(Integer j:g2.get(i))&#123;</span><br><span class=\"line\">                ans[j] = ans[i]-<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> node,<span class=\"keyword\">boolean</span>[] vi)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(vi[node]) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        vi[node] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(Integer next:g1.get(node))&#123;</span><br><span class=\"line\">            ans += dfs(next,vi);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(Integer next:g2.get(node))&#123;</span><br><span class=\"line\">            ans += vi[next]?<span class=\"number\">0</span>:dfs(next,vi)+<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行情况-4\"><a class=\"markdownIt-Anchor\" href=\"#运行情况-4\">#</a> 运行情况</h3>\n",
            "tags": [
                "leetcode contest"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2021/10/28/%E6%B7%B1%E6%90%9C%E5%B9%BF%E6%90%9C/",
            "url": "https://liukplus.github.io.com/2021/10/28/%E6%B7%B1%E6%90%9C%E5%B9%BF%E6%90%9C/",
            "title": "深搜广搜",
            "date_published": "2021-10-27T16:07:10.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"深度优先搜索depth-first-searchdfs\"><a class=\"markdownIt-Anchor\" href=\"#深度优先搜索depth-first-searchdfs\">#</a> 深度优先搜索（Depth-First Search）DFS</h1>\n<h1 id=\"广度优先搜索breath-first-searchbfs\"><a class=\"markdownIt-Anchor\" href=\"#广度优先搜索breath-first-searchbfs\">#</a> 广度优先搜索（Breath-First Search）BFS</h1>\n",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2021/10/27/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95-%E5%B2%9B%E5%B1%BF%E9%97%AE%E9%A2%98/",
            "url": "https://liukplus.github.io.com/2021/10/27/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95-%E5%B2%9B%E5%B1%BF%E9%97%AE%E9%A2%98/",
            "title": "回溯算法-岛屿问题",
            "date_published": "2021-10-27T12:17:17.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"回溯算法介绍\"><a class=\"markdownIt-Anchor\" href=\"#回溯算法介绍\">#</a> 回溯算法介绍</h1>\n<h1 id=\"回溯算法经典问题\"><a class=\"markdownIt-Anchor\" href=\"#回溯算法经典问题\">#</a> 回溯算法经典问题</h1>\n<h2 id=\"1排列组合问题大礼包\"><a class=\"markdownIt-Anchor\" href=\"#1排列组合问题大礼包\">#</a> 1. 排列组合问题大礼包</h2>\n<p><a href=\"https://leetcode-cn.com/problems/combination-sum/\">组合</a></p>\n<p><a href=\"https://leetcode-cn.com/problems/combination-sum-ii/\">组合 ||</a></p>\n<p><a href=\"https://leetcode-cn.com/problems/combination-sum-iii/\">组合 |||</a></p>\n<p><a href=\"https://leetcode-cn.com/problems/combination-sum-iv/\">组合 Ⅳ</a></p>\n<p><a href=\"https://leetcode-cn.com/problems/permutations/\">全排列</a></p>\n<p><a href=\"https://leetcode-cn.com/problems/permutations-ii/\">全排列 ||</a></p>\n<p><a href=\"https://leetcode-cn.com/problems/subsets/\">子集</a></p>\n<p><a href=\"https://leetcode-cn.com/problems/subsets-ii/\">子集 ||</a></p>\n",
            "tags": [
                "回溯 岛屿"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2021/10/18/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/",
            "url": "https://liukplus.github.io.com/2021/10/18/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/",
            "title": "二叉树遍历",
            "date_published": "2021-10-17T16:30:32.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"二叉树遍历大礼包\"><a class=\"markdownIt-Anchor\" href=\"#二叉树遍历大礼包\">#</a> 二叉树遍历大礼包</h1>\n<h2 id=\"二叉树节点\"><a class=\"markdownIt-Anchor\" href=\"#二叉树节点\">#</a> 二叉树节点</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//节点存储的数据以int为例</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TreeNode</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> val;</span><br><span class=\"line\">    TreeNode left;</span><br><span class=\"line\">    TreeNode right;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TreeNode</span><span class=\"params\">()</span></span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TreeNode</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.val=val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TreeNode</span><span class=\"params\">(<span class=\"keyword\">int</span> val,TreeNode left,TreeNode right)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.val=val;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.left=left;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.right=right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"递归版前-中-后序遍历\"><a class=\"markdownIt-Anchor\" href=\"#递归版前-中-后序遍历\">#</a> 递归版前、中、后序遍历</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">preOrderTraversal</span><span class=\"params\">(TreeNode root)</span></span>&#123;<span class=\"comment\">//前序遍历二叉树</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.print(root.val);<span class=\"comment\">//对这个节点的数据可以是任意操作（仅仅以输出为例）</span></span><br><span class=\"line\">    preOrderTraversal(root.left);</span><br><span class=\"line\">    preOrderTraversal(root.right);</span><br><span class=\"line\">    <span class=\"comment\">//遍历顺序</span></span><br><span class=\"line\">    <span class=\"comment\">//前序遍历（根--&gt;左--&gt;右）</span></span><br><span class=\"line\">    <span class=\"comment\">//中序遍历（左--&gt;根--&gt;右）</span></span><br><span class=\"line\">    <span class=\"comment\">//后序遍历（左--&gt;右--&gt;根）</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>递归中序后序遍历就省略不写了，把对节点数据的操作的代码位置按照遍历顺序改变一下就可以了</p>\n<h2 id=\"非递归版前-中-后序遍历\"><a class=\"markdownIt-Anchor\" href=\"#非递归版前-中-后序遍历\">#</a> 非递归版前、中、后序遍历</h2>\n<p><a href=\"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/\">leetcode 前序遍历</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">nonrecursivePre</span><span class=\"params\">(TreeNode root)</span></span>&#123;<span class=\"comment\">//非递归前序</span></span><br><span class=\"line\">    Stack&lt;TreeNode&gt; stack = <span class=\"keyword\">new</span> Stack();</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(root!=<span class=\"keyword\">null</span> || !stack.isEmpty())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(root!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            System.out.print(root.val);</span><br><span class=\"line\">            stack.push(root);</span><br><span class=\"line\">            root=root.left;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        root=stack.pop();<span class=\"comment\">//(1)</span></span><br><span class=\"line\">        root=root.right;<span class=\"comment\">//(2)</span></span><br><span class=\"line\">        <span class=\"comment\">//(1)(2)可合二为一:root=stack.pop().right;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://leetcode-cn.com/problems/binary-tree-preorder-traversal/\">leetcode 中序遍历</a><br>\n<a href=\"https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/\"> leetcode 二叉搜索树中第 K 小的元素</a><br>\n<a href=\"https://leetcode-cn.com/problems/validate-binary-search-tree/\">验证二叉搜索树</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">nonRecursiveIn</span><span class=\"params\">(TreeNode root)</span></span>&#123;<span class=\"comment\">//非递归中序</span></span><br><span class=\"line\">    Stack&lt;TreeNode&gt; stack = <span class=\"keyword\">new</span> Stack();</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(root!=<span class=\"keyword\">null</span> || !stack.isEmpty())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(root!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            stack.push(root);</span><br><span class=\"line\">            root=root.left;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        root=stack.pop();</span><br><span class=\"line\">        System.out.print(root.val);</span><br><span class=\"line\">        root=root.right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://leetcode-cn.com/problems/binary-tree-postorder-traversal/\">leetcode 后序遍历</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">nonRecursivePost</span><span class=\"params\">(TreeNode root)</span></span>&#123;<span class=\"comment\">//非递归后序</span></span><br><span class=\"line\">    Stack&lt;TreeNode&gt; stack = <span class=\"keyword\">new</span> Stack();</span><br><span class=\"line\">    TreeNode pre = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(root!=<span class=\"keyword\">null</span> || !stack.isEmpty())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(root!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            stack.push(root);</span><br><span class=\"line\">            root=root.left;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        root=stack.pop();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root.right==<span class=\"keyword\">null</span> || pre==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            System.out.print(root.val);</span><br><span class=\"line\">            pre=root;</span><br><span class=\"line\">            root=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            stack.push(root);</span><br><span class=\"line\">            root=root.right;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"其他遍历\"><a class=\"markdownIt-Anchor\" href=\"#其他遍历\">#</a> 其他遍历</h2>\n<p><a href=\"https://leetcode-cn.com/problems/binary-tree-level-order-traversal/\">leetcode 层级遍历</a><br>\n<a href=\"https://leetcode-cn.com/problems/binary-tree-right-side-view/\"> leetcode 右视图</a><br>\n<a href=\"https://leetcode-cn.com/problems/binary-tree-zigzag-level-order-traversal/\"> leetcode 锯齿形层序遍历</a><br>\n<a href=\"https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/\"> leetcode 填充每个节点的下一个右侧节点指针</a><br>\n<a href=\"https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node-ii/\"> leetcode 填充每个节点的下一个右侧节点指针 II</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">levelTraversal</span><span class=\"params\">(TreeNode root)</span></span>&#123;<span class=\"comment\">//层序遍历</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Queue&lt;Integer&gt; nodes = <span class=\"keyword\">new</span> LinkedList();</span><br><span class=\"line\">    nodes.offer(root);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!nodes.isEmpty())&#123;</span><br><span class=\"line\">        TreeNode node = nodes.poll();</span><br><span class=\"line\">        System.out.print(node.val);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(node.left=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            nodes.offer(root.left);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(node.right!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            nodes.offer(root.right);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://leetcode-cn.com/problems/vertical-order-traversal-of-a-binary-tree/\">leetcode 垂序遍历</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> List&lt;List&lt;Integer&gt;&gt; verticalTraversal(TreeNode root)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//updating...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> BinaryTree</label></li>\n</ul>\n",
            "tags": [
                "树 二叉树"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2021/10/15/Sort/",
            "url": "https://liukplus.github.io.com/2021/10/15/Sort/",
            "title": "Sort",
            "date_published": "2021-10-14T16:08:47.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"排序算法\"><a class=\"markdownIt-Anchor\" href=\"#排序算法\">#</a> 排序算法</h1>\n<h1 id=\"1快速排序\"><a class=\"markdownIt-Anchor\" href=\"#1快速排序\">#</a> 1. 快速排序</h1>\n<p><code>思想：每次从数组中要排序的部分中选择一个元素，将小于等于它的元素放在它的左边，将大于等于它的元素放在它的右边，这样我们就找到了该元素在数组排好序后的正确位置，并且数组被切分成两半，该元素的左边和该元素的右边，再对右边部分地柜调用刚才的步骤，右边部分有序了，左边部分同样也递归调用，左边部分有序了，整个数组也就有序了。</code></p>\n<p><code>方法：</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 切分数组</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">partition</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a,<span class=\"keyword\">int</span> left,<span class=\"keyword\">int</span> right)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> less=left,more=right+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v=a[left];<span class=\"comment\">//选取最左边的元素作为这一次要排序的数</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(a[++less]&lt;v)&#123;<span class=\"comment\">//找到左边大于v的数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(less&gt;=right)&#123;<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(a[--more]&gt;v)&#123;<span class=\"comment\">//找到右边小于v的数</span></span><br><span class=\"line\">            <span class=\"comment\">// if(more&lt;less)&#123;break;&#125;这里可有可无，因为v等于a[left]，more不可能越界</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(less&gt;=more)&#123;<span class=\"keyword\">break</span>;&#125;<span class=\"comment\">//左指针&gt;=右指针，表示已经遍历完了</span></span><br><span class=\"line\">        exch(a,less,more);<span class=\"comment\">//将左边大于v的数与右边小于</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    exch(a,more,left);<span class=\"comment\">//将选取的数放在排序后的位置</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> more;<span class=\"comment\">//返回切分点</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 递归调用的排序方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">quickSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a,<span class=\"keyword\">int</span> lo,<span class=\"keyword\">int</span> hi)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(lo&gt;=hi)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> partitionPoint=partition(a,lo,hi);<span class=\"comment\">//将数组切分</span></span><br><span class=\"line\">    quickSort(a,lo,partitionPoint-<span class=\"number\">1</span>);<span class=\"comment\">//递归调用将数组左边排序</span></span><br><span class=\"line\">    quickSort(a,partitionPoint+<span class=\"number\">1</span>,hi);<span class=\"comment\">//递归调用将数组右边排序</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 交换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exch</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a,<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp=a[i];</span><br><span class=\"line\">    a[i]=a[j];</span><br><span class=\"line\">    a[j]=temp</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">||</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exch</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a,<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">    a[i]^=a[j];</span><br><span class=\"line\">    a[j]^=a[i];</span><br><span class=\"line\">    a[i]^=a[j];</span><br><span class=\"line\">&#125;(</span><br></pre></td></tr></table></figure>\n<h1 id=\"2归并排序\"><a class=\"markdownIt-Anchor\" href=\"#2归并排序\">#</a> 2. 归并排序</h1>\n<p><code>思想：将要排序的数组a二分为两个数组a1,a2，分别对这两个数组排序,通过递归调用将a1,a2排好序后，再将a1,a2归并，对a1,a2这两个数组排序是也采用相同的办法，二分再归并，实际上排序是通过归并来完成的，无限二分直到lo==hi，即子数组只有一个数（肯定有序），再将各个子数组合并，这样数组就有序了。</code> <br>\n <code>方法：</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 归并</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a,<span class=\"keyword\">int</span> lo,<span class=\"keyword\">int</span> mid,<span class=\"keyword\">int</span> hi)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] aux=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[hi-lo+<span class=\"number\">1</span>];<span class=\"comment\">//建立辅助数组存储归并后的元素</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index=<span class=\"number\">0</span>,index1=lo,index2mid+<span class=\"number\">1</span>;<span class=\"comment\">//双指针index1指向数组左边部分的起始位置，index2指向数组右边部分的起始位置</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(index1&lt;=mid &amp;&amp; index2&lt;=hi)&#123;</span><br><span class=\"line\">        aux[index++]=a[index1]&gt;a[index2]?a[index1++]:a[index2++];<span class=\"comment\">//比较左指针和右指针指向的元素，将较大的元素赋值给辅助数组对应下标，指向该较大元素的指针右移</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(index1&lt;=mid)&#123;<span class=\"comment\">//左边部分归并剩下部分依次添加到辅助数组（1）</span></span><br><span class=\"line\">        aux[index++]=a[index1++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(index2&lt;=mid)&#123;<span class=\"comment\">//右边部分归并剩下部分依次添加到辅助数组（2）</span></span><br><span class=\"line\">        aux[index++]=a[index2++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//（1）与（2）只会执行一个</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;hi-lo+<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">        a[i+lo]=aux[i];<span class=\"comment\">//将辅助数组拷贝到原数组</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mergeSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a,<span class=\"keyword\">int</span> lo,<span class=\"keyword\">int</span> hi)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(lo&gt;=hi)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid=lo+(hi-lo)&gt;&gt;<span class=\"number\">1</span>;<span class=\"comment\">//二分数组</span></span><br><span class=\"line\">    mergeSort(a,lo,mid);<span class=\"comment\">//递归调用，将左边排序</span></span><br><span class=\"line\">    mergeSort(a,mid+<span class=\"number\">1</span>,hi);<span class=\"comment\">//将右边排序</span></span><br><span class=\"line\">    merge(a,lo,mid,hi);<span class=\"comment\">//归并左右边</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"3堆排序\"><a class=\"markdownIt-Anchor\" href=\"#3堆排序\">#</a> 3. 堆排序</h1>\n<p><code>思想：通过建立二叉堆数据结构（完全二叉树），我么可以用数组的下标来对应二叉树的层级结构，在使用数组的第一个位置的情况下，对二叉树任意节点都有以下关系：某个左子节点下标=2*该节点下标+1，我们要实现这样的堆，它每个节点的值（即数组对应的元素）不小于它的子节点的值，这就是堆有序，从任意节点向上，我们都能得到非递减的元素，从任意节点向下，我们都能得到非递增的元素，对要排序的数组实现堆有序的结构，每次从堆中取出根节点（也就是最大元素），再将堆恢复为有序，具体步骤是交换根节点和最后一个节点，然后断开最后一个节点与堆的连接，通过下沉根节点将堆恢复为有序。所以我们每次从堆中取出的元素都是堆中最大的元素，这样数组中所有的元素就排好序了。</code> <br>\n <code>方法：</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下沉</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sink</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a,<span class=\"keyword\">int</span> sinkPoint,<span class=\"keyword\">int</span> heapsize)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">2</span>*sinkPoint+<span class=\"number\">1</span>&lt;heapsize)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> left=<span class=\"number\">2</span>*sinkPoint+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> larger = left+<span class=\"number\">1</span>&lt;heapsize &amp;&amp; a[left+<span class=\"number\">1</span>]&gt;a[left]?left+<span class=\"number\">1</span>:left;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[sinkPoint]&lt;a[larger])&#123;</span><br><span class=\"line\">            exch(a,sinkPoint,larger);</span><br><span class=\"line\">            sinkPoint=larger;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 上浮</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">swim</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a,<span class=\"keyword\">int</span> swimPoint)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(swimPoint&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[swimPoint]&gt;a[(swimPoint-<span class=\"number\">1</span>)/<span class=\"number\">2</span>])&#123;</span><br><span class=\"line\">                exch(a,swimPoint,(swimPoint-<span class=\"number\">1</span>)/<span class=\"number\">2</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">heapSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = a.length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        swim(a,i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> heapsize=len;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        exch(a,--heapsize,<span class=\"number\">0</span>);</span><br><span class=\"line\">        sink(a,<span class=\"number\">0</span>,heapsize);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">||</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = a.length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=(len-<span class=\"number\">1</span>)/<span class=\"number\">2</span>;i&gt;=<span class=\"number\">0</span>;i--) &#123;</span><br><span class=\"line\">        sink(a, i, len);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> heapsize = len;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        swap(a, <span class=\"number\">0</span>, --heapsize);</span><br><span class=\"line\">        sink(a, <span class=\"number\">0</span>, heapsize);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">heapSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len=a.length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=(len-<span class=\"number\">1</span>)/<span class=\"number\">2</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">        sink(a,i,len);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n    <div id=\"aplayer-vKRpYYkz\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"4999290430\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"\n    ></div>\n",
            "tags": [
                "Sort algorithms"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2021/10/13/Markdown-Grammar/",
            "url": "https://liukplus.github.io.com/2021/10/13/Markdown-Grammar/",
            "title": "Markdown Grammar",
            "date_published": "2021-10-13T06:01:49.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><!--Headings-->\n<p>Here are some Headings:</p>\n<p><img src=\"headings.jpg\" alt=\"\"></p>\n<h1 id=\"heading-1\"><a class=\"markdownIt-Anchor\" href=\"#heading-1\">#</a> Heading 1</h1>\n<h2 id=\"heading-2\"><a class=\"markdownIt-Anchor\" href=\"#heading-2\">#</a> Heading 2</h2>\n<h3 id=\"heading-3\"><a class=\"markdownIt-Anchor\" href=\"#heading-3\">#</a> Heading 3</h3>\n<!--Italic-->\n<p><img src=\"italic.png\" alt=\"\"></p>\n<p><strong>Italic Text</strong><br>\nor<br>\n<strong>Italic Text</strong></p>\n<!--StrikeThrough-->\n<p><s>This text</s> is strikethrough</p>\n<p><img src=\"partingline.png\" alt=\"\"></p>\n<!--Parting line-->\n<hr>\n<hr>\n<!--Code block-->\n<p><img src=\"codeblock.png\" alt=\"\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">helloworld</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello world!&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Helloworld</span>():</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello world!&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p><code>print(&quot;hello world!&quot;)</code></p>\n<!--Quote-->\n<blockquote>\n<p>Good artists copy, great artists steal.</p>\n</blockquote>\n<!--ol && ul-->\n<p><img src=\"ul&amp;ol.png\" alt=\"\"></p>\n<ul>\n<li>item</li>\n<li>item</li>\n<li>item</li>\n</ul>\n<ol>\n<li>item</li>\n<li>item</li>\n<li>item</li>\n</ol>\n<ul>\n<li>\n<ol>\n<li>item</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>item</li>\n</ol>\n</li>\n</ul>\n<!--Table-->\n<p><img src=\"table.png\" alt=\"\"></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Email</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>liuk</td>\n<td><a href=\"mailto:3106034108@qq.com\">3106034108@qq.com</a></td>\n</tr>\n</tbody>\n</table>\n<!--Link-->\n<p><img src=\"link.png\" alt=\"\"></p>\n<p><a href=\"https://github.com/liukplus\">My github</a></p>\n<p><a href=\"https://leetcode-cn.com/\">My leetcode</a></p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\"><label for=\"cbx_0\"> First blog</label></li>\n</ul>\n",
            "tags": [
                "Markdown Grammar as a reference"
            ]
        },
        {
            "id": "https://liukplus.github.io.com/2021/10/07/My-New-Post/",
            "url": "https://liukplus.github.io.com/2021/10/07/My-New-Post/",
            "title": "My New Post",
            "date_published": "2021-10-06T16:56:06.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>",
            "tags": []
        },
        {
            "id": "https://liukplus.github.io.com/2021/10/07/hello-world/",
            "url": "https://liukplus.github.io.com/2021/10/07/hello-world/",
            "title": "Hello World",
            "date_published": "2021-10-06T16:46:18.850Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}