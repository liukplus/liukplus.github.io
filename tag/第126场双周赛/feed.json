{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hello • All posts by \"第126场双周赛\" tag",
    "description": "",
    "home_page_url": "https://liukplus.github.io.com",
    "items": [
        {
            "id": "https://liukplus.github.io.com/2024/03/16/leetcode-biweekly-contest126/",
            "url": "https://liukplus.github.io.com/2024/03/16/leetcode-biweekly-contest126/",
            "title": "leetcode-biweekly-contest126",
            "date_published": "2024-03-16T15:39:55.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code></p>\n<h1 id=\"第126场双周赛\"><a class=\"markdownIt-Anchor\" href=\"#第126场双周赛\">#</a> <a href=\"\">第 126 场双周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>模拟</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">sumOfEncryptedInt</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</span><br><span class=\"line\">            res += get(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] arr = String.valueOf(n).toCharArray();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">char</span> ch:arr)&#123;</span><br><span class=\"line\">            m = Math.max(m,ch-<span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">            ans = ans*<span class=\"number\">10</span>+m;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>优先队列 / 模拟</p>\n<p>将所有下标加入优先队列，下标对应元素较小的最先出列，用哈希表记录已经被标记过的下标。</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">long</span>[] unmarkedSumArray(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span>[][] queries) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m = queries.length;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> sum = <span class=\"number\">0</span>;<span class=\"comment\">//记录nums总和</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</span><br><span class=\"line\">            sum += i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] ans = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[m];</span><br><span class=\"line\">        PriorityQueue&lt;Integer&gt; q = <span class=\"keyword\">new</span> PriorityQueue&lt;Integer&gt;((a,b) -&gt; nums[a]==nums[b]?a-b:nums[a]-nums[b]);<span class=\"comment\">//按照先nums[i]比大小，nums[i]相同的再按下标i比大小的次序建立小根堆</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            q.offer(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Set&lt;Integer&gt; set = <span class=\"keyword\">new</span> HashSet();<span class=\"comment\">//set记录已经被标记的下标</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[] temp = queries[i];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> idx = temp[<span class=\"number\">0</span>];<span class=\"comment\">//index</span></span><br><span class=\"line\">            sum -= set.contains(idx)?<span class=\"number\">0</span>:nums[idx];<span class=\"comment\">//idx如果未被标记，标记idx</span></span><br><span class=\"line\">            set.add(idx);<span class=\"comment\">//将idx加入set</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> cnt = temp[<span class=\"number\">1</span>];<span class=\"comment\">//要标记的下标数目</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(!q.isEmpty() &amp;&amp; cnt&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> j = q.poll();</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!set.contains(j))&#123;<span class=\"comment\">//如果未被标记</span></span><br><span class=\"line\">                    sum -= nums[j];</span><br><span class=\"line\">                    set.add(j);</span><br><span class=\"line\">                    cnt--;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ans[i] = sum;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>贪心 / 优先队列</p>\n<p>考虑一个 &quot;?&quot;，替换为 ch 增加的成本为 s 中 ch 的数量，ch 为 [a-z] 中的一个字母。为了使 s 的总成本最小，我们贪心地填入 s 中出现次数最少的字母，该字母不止一个时，取字典序最小的一个。用集合 li 存储这些要填入字母。最后从左到右将 &quot;?&quot; 替换为 li 中的字典序最小的字母，使得 s 字典序最小。</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">minimizeStringValue</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] cnt = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">26</span>];<span class=\"comment\">//记录s中各字母的出现次数</span></span><br><span class=\"line\">        PriorityQueue&lt;Integer&gt; q = <span class=\"keyword\">new</span> PriorityQueue&lt;Integer&gt;((a,b) -&gt; cnt[a]==cnt[b]?a-b:cnt[a]-cnt[b]);<span class=\"comment\">//按照先cnt[i],再i的次序建立小根堆</span></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] arr = s.toCharArray();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = arr.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">char</span> ch:arr)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ch != <span class=\"string\">&#x27;?&#x27;</span>)&#123;</span><br><span class=\"line\">                cnt[ch-<span class=\"string\">&#x27;a&#x27;</span>]++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">26</span>;i++)&#123;</span><br><span class=\"line\">            q.offer(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        List&lt;Character&gt; li = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">char</span> ch = arr[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ch == <span class=\"string\">&#x27;?&#x27;</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> temp = q.poll();<span class=\"comment\">//填入最优的字母</span></span><br><span class=\"line\">                li.add((<span class=\"keyword\">char</span>)(temp+<span class=\"string\">&#x27;a&#x27;</span>));</span><br><span class=\"line\">                cnt[temp]++;<span class=\"comment\">//将该字母出现次数加一</span></span><br><span class=\"line\">                q.offer(temp);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Collections.sort(li);<span class=\"comment\">//将li排序</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;<span class=\"comment\">//从左到右“?”位置填入剩余字母中字典序最小</span></span><br><span class=\"line\">            <span class=\"keyword\">char</span> ch = arr[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ch == <span class=\"string\">&#x27;?&#x27;</span>)&#123;</span><br><span class=\"line\">                arr[i] = li.get(j);</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> String.valueOf(arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"\"></a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>动态规划 + 计数</p>\n<p>记 num 长度为 n。</p>\n<p>对每个长为 p (0&lt;=p&lt;=n)，和为 k 的子序列，对于答案的贡献为 2^p。</p>\n<p>因此我们需要统计和为 k 的子序列的长度。</p>\n<p>定义数组 dp [n+1][k+1], 其中 dp [i][j] 表示 nums 中长为 i，和为 j 的子序列个数。dp [0][0] = 1。表示长为 0，和为 0 的子序列有一个，即空序列。</p>\n<p>对于 nums [i], 转移方程为 dp [i][j] += dp [i-1][j-nums [i]] 对于所有的 (i,j) 满足 i&gt;0 &amp;&amp; j&gt;=nums [i]。对于 i,j 倒序遍历节约空间。</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">sumOfPower</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mo = <span class=\"number\">1000000007</span>;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n+<span class=\"number\">1</span>];<span class=\"comment\">//arr[i]=(2^i)%mo</span></span><br><span class=\"line\">        arr[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            arr[i] = (arr[i-<span class=\"number\">1</span>]*<span class=\"number\">2</span>)%mo;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[][] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n+<span class=\"number\">1</span>][k+<span class=\"number\">1</span>];</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp&gt;k) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=k;j-temp&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p=n;p&gt;<span class=\"number\">0</span>;p--)&#123;</span><br><span class=\"line\">                    dp[p][j] = (dp[p][j]+dp[p-<span class=\"number\">1</span>][j-temp])%mo;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> temp = (dp[i][k]*arr[n-i])%mo;</span><br><span class=\"line\">            ans = (ans+temp)%mo;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "第126场双周赛"
            ]
        }
    ]
}