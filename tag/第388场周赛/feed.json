{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hello • All posts by \"第388场周赛\" tag",
    "description": "",
    "home_page_url": "https://liukplus.github.io.com",
    "items": [
        {
            "id": "https://liukplus.github.io.com/2024/03/14/leetcode-weekly-contest388/",
            "url": "https://liukplus.github.io.com/2024/03/14/leetcode-weekly-contest388/",
            "title": "leetcode-weekly-contest388",
            "date_published": "2024-03-14T07:27:22.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code></p>\n<h1 id=\"第388场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第388场周赛\">#</a> <a href=\"https://leetcode.cn/contest/weekly-contest-388/\">第 388 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/apple-redistribution-into-boxes/\">3074. 重新分装苹果</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>贪心</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minimumBoxes</span><span class=\"params\">(<span class=\"keyword\">int</span>[] apple, <span class=\"keyword\">int</span>[] capacity)</span> </span>&#123;</span><br><span class=\"line\">        Arrays.sort(capacity);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = capacity.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sum = Arrays.stream(apple).sum();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n-<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            sum -= capacity[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum&lt;=<span class=\"number\">0</span>) <span class=\"keyword\">return</span> n-i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/maximize-happiness-of-selected-children/\">3075. 幸福值最大化的选择方案</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>贪心</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">maximumHappinessSum</span><span class=\"params\">(<span class=\"keyword\">int</span>[] happiness, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        Arrays.sort(happiness);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = happiness.length;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n-<span class=\"number\">1</span>,j=<span class=\"number\">0</span>;j&lt;k;i--)&#123;</span><br><span class=\"line\">            ans += Math.max(<span class=\"number\">0</span>,happiness[i]-j);</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/shortest-uncommon-substring-in-an-array/\">3076. 数组中的最短非公共子字符串</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>暴力</p>\n<p>数据范围足够小，用 map 统计 arr 中所有字符串的所有子串，然后对于字符串 arr [i]，用 cnt 统计 arr [i] 的所有子串，判断 arr [i] 的所有子串 sub 是否只出现在 arr [i] 中，也即判断 cnt.get (sub)==map.get (sub)。再从满足条件的字符子串中取长度最小中的字典序最小的即可。</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String[] shortestSubstrings(String[] arr) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = arr.length;</span><br><span class=\"line\">        Map&lt;String,Integer&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        String[] ans = <span class=\"keyword\">new</span> String[n];</span><br><span class=\"line\">        Arrays.fill(ans,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            String temp = arr[i];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=temp.length();j++)&#123;</span><br><span class=\"line\">                get(temp,map,j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            String temp = arr[i];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=temp.length();j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!ans[i].equals(<span class=\"string\">&quot;&quot;</span>)) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                Map&lt;String,Integer&gt; cnt = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">                get(temp,cnt,j);</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(String str:cnt.keySet())&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> v = cnt.get(str);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(v == map.get(str))&#123;</span><br><span class=\"line\">                        ans[i] = ans[i].equals(<span class=\"string\">&quot;&quot;</span>) || ans[i].compareTo(str)&gt;<span class=\"number\">0</span>?str:ans[i];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">(String s,Map&lt;String,Integer&gt; map,<span class=\"keyword\">int</span> len)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = s.length();</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j+len&lt;=n;j++)&#123;</span><br><span class=\"line\">                map.merge(s.substring(j,j+len),<span class=\"number\">1</span>,Integer::sum);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-strength-of-k-disjoint-subarrays/\">3077. K 个不相交子数组的最大能量值<br>\n</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>划分 dp</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">maximumStrength</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        \t\t<span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span>[] sum = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t\tsum[i+<span class=\"number\">1</span>] = sum[i] + nums[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span>[] f = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=k;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> pre = f[j-<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\tf[j-<span class=\"number\">1</span>] = Long.MIN_VALUE;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> mx = Long.MIN_VALUE;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> w = (j%<span class=\"number\">2</span>&gt;<span class=\"number\">0</span>?<span class=\"number\">1L</span>:-<span class=\"number\">1L</span>)*(k-j+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=j;i&lt;=n-k+j;i++)&#123;</span><br><span class=\"line\">\t\t\t\tmx = Math.max(pre-sum[i-<span class=\"number\">1</span>]*w,mx);</span><br><span class=\"line\">                pre = f[i];</span><br><span class=\"line\">\t\t\t\tf[i] = Math.max(f[i-<span class=\"number\">1</span>],sum[i]*w+mx);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> f[n];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "第388场周赛"
            ]
        }
    ]
}