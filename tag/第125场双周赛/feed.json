{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hello • All posts by \"第125场双周赛\" tag",
    "description": "",
    "home_page_url": "https://liukplus.github.io.com",
    "items": [
        {
            "id": "https://liukplus.github.io.com/2024/03/03/leetcode-biweekly-contest125/",
            "url": "https://liukplus.github.io.com/2024/03/03/leetcode-biweekly-contest125/",
            "title": "leetcode-biweekly-contest125",
            "date_published": "2024-03-03T06:59:05.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code> <br>\n1623 / 29347</p>\n<h1 id=\"第125场周赛\"><a class=\"markdownIt-Anchor\" href=\"#第125场周赛\">#</a> <a href=\"https://leetcode.cn/contest/biweekly-contest-125/\">第 125 场周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-operations-to-exceed-threshold-value-i/\">100231. 超过阈值的最少操作数 I</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>排序 + 模拟</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minOperations</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        Arrays.sort(nums);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i]&gt;=k) <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/minimum-operations-to-exceed-threshold-value-ii/\">100232. 超过阈值的最少操作数 II</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>贪心 + 优先队列<br>\n每次选最小的两个数合并</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minOperations</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        PriorityQueue&lt;Long&gt; q = <span class=\"keyword\">new</span> PriorityQueue();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i&lt;k) q.offer(i+<span class=\"number\">0L</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(q.size()&gt;<span class=\"number\">1</span> &amp;&amp; q.peek()&lt;k)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> x = q.poll(), y = q.poll();</span><br><span class=\"line\">            ans++;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> next = <span class=\"number\">2</span>*Math.min(x,y)+Math.max(x,y);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(next&lt;k) q.offer(next);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans += q.size()==<span class=\"number\">1</span> &amp;&amp; q.peek()&lt;k?<span class=\"number\">1</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network/\">100226. 在带权树网络中统计可连接服务器对数目</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>dfs + 乘法原理</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] countPairsOfConnectableServers(<span class=\"keyword\">int</span>[][] edges, <span class=\"keyword\">int</span> signalSpeed) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = edges.length + <span class=\"number\">1</span>;</span><br><span class=\"line\">        List&lt;<span class=\"keyword\">int</span>[]&gt;[] g = <span class=\"keyword\">new</span> ArrayList[n];</span><br><span class=\"line\">        Arrays.setAll(g, i -&gt; <span class=\"keyword\">new</span> ArrayList&lt;&gt;());</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span>[] e : edges) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = e[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y = e[<span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> wt = e[<span class=\"number\">2</span>];</span><br><span class=\"line\">            g[x].add(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;y, wt&#125;);</span><br><span class=\"line\">            g[y].add(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;x, wt&#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] ans = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span>[] e : g[i]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> y = e[<span class=\"number\">0</span>];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> wt = e[<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> cnt = dfs(y, i, wt%signalSpeed, g, signalSpeed);</span><br><span class=\"line\">                ans[i] += cnt * sum;</span><br><span class=\"line\">                sum += cnt;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> fa, <span class=\"keyword\">int</span> sum, List&lt;<span class=\"keyword\">int</span>[]&gt;[] g, <span class=\"keyword\">int</span> signalSpeed)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cnt = sum == <span class=\"number\">0</span>? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span>[] e : g[x]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y = e[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> wt = e[<span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (y != fa) &#123;</span><br><span class=\"line\">                cnt += dfs(y, x, (sum + wt)%signalSpeed, g, signalSpeed);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cnt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/find-the-maximum-sum-of-node-values/\">100210. 最大节点价值之和</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>解法一：树形 dp</p>\n<p>解法二：脑筋急转弯</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//解法一</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">maximumValueSum</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k, <span class=\"keyword\">int</span>[][] edges)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = edges.length+<span class=\"number\">1</span>;</span><br><span class=\"line\">        List&lt;Integer&gt;[] g = <span class=\"keyword\">new</span> ArrayList[n];</span><br><span class=\"line\">        Arrays.setAll(g,e-&gt;<span class=\"keyword\">new</span> ArrayList());</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] e:edges)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> from = e[<span class=\"number\">0</span>], to = e[<span class=\"number\">1</span>];</span><br><span class=\"line\">            g[from].add(to);</span><br><span class=\"line\">            g[to].add(from);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] ans = dfs(-<span class=\"number\">1</span>,<span class=\"number\">0</span>,nums,k,g);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Math.max(ans[<span class=\"number\">0</span>],ans[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">long</span>[] dfs(<span class=\"keyword\">int</span> pre,<span class=\"keyword\">int</span> cur,<span class=\"keyword\">int</span>[] nums,<span class=\"keyword\">int</span> k,List&lt;Integer&gt;[] g)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] ans = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        ans[<span class=\"number\">1</span>] = Long.MIN_VALUE;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(Integer next:g[cur])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(pre == next) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">long</span>[] temp = dfs(cur,next,nums,k,g);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = nums[next], xork = x^k;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> y = ans[<span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">long</span> r1 = Math.max(temp[<span class=\"number\">0</span>]-x+xork,temp[<span class=\"number\">1</span>]-xork+x);</span><br><span class=\"line\">            <span class=\"keyword\">long</span> r0 = Math.max(temp[<span class=\"number\">0</span>],temp[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            ans[<span class=\"number\">1</span>] = Math.max(r1+ans[<span class=\"number\">0</span>],r0+ans[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            ans[<span class=\"number\">0</span>] = Math.max(r1+y,r0+ans[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans[<span class=\"number\">0</span>] += nums[cur];</span><br><span class=\"line\">        ans[<span class=\"number\">1</span>] += nums[cur]^k;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "第125场双周赛"
            ]
        }
    ]
}