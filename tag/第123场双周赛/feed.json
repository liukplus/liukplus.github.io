{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hello • All posts by \"第123场双周赛\" tag",
    "description": "",
    "home_page_url": "https://liukplus.github.io.com",
    "items": [
        {
            "id": "https://liukplus.github.io.com/2024/02/06/leetcode-biweekly-contest123/",
            "url": "https://liukplus.github.io.com/2024/02/06/leetcode-biweekly-contest123/",
            "title": "leetcode-biweekly-contest123",
            "date_published": "2024-02-06T03:05:08.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><code>rank</code> <br>\n426/23599</p>\n<h1 id=\"第123场双周赛\"><a class=\"markdownIt-Anchor\" href=\"#第123场双周赛\">#</a> <a href=\"https://leetcode.cn/contest/biweekly-contest-123/\">第 123 场双周赛</a></h1>\n<h2 id=\"问题一\"><a class=\"markdownIt-Anchor\" href=\"#问题一\">#</a> 问题一</h2>\n<p><a href=\"https://leetcode.cn/problems/type-of-triangle-ii/\">3024. 三角形类型 II</a></p>\n<h3 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h3>\n<p>排序 + 模拟</p>\n<p>三条边构成三角形的充要条件：任意两边之和大于第三边</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">triangleType</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        Arrays.sort(nums);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[<span class=\"number\">0</span>]+nums[<span class=\"number\">1</span>]&lt;=nums[<span class=\"number\">2</span>]) <span class=\"keyword\">return</span> <span class=\"string\">&quot;none&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[<span class=\"number\">0</span>] == nums[<span class=\"number\">1</span>] &amp;&amp; nums[<span class=\"number\">1</span>] == nums[<span class=\"number\">2</span>]) <span class=\"keyword\">return</span> <span class=\"string\">&quot;equilateral&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(nums[<span class=\"number\">0</span>] == nums[<span class=\"number\">1</span>] || nums[<span class=\"number\">1</span>] == nums[<span class=\"number\">2</span>]) <span class=\"keyword\">return</span> <span class=\"string\">&quot;isosceles&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;scalene&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题二\"><a class=\"markdownIt-Anchor\" href=\"#问题二\">#</a> 问题二</h2>\n<p><a href=\"https://leetcode.cn/problems/find-the-number-of-ways-to-place-people-i/\">3025. 人员站位的方案数 I</a></p>\n<h3 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h3>\n<p>解法 1：二维前缀和<br>\n从左上角到右下角统计二维前缀和，然后二重循环遍历 points 数组，判断两个端点位置关系（是否为一个在左上，一个在右下）以及两个端点所确定的矩形区域的点的个数是否为 2（前缀和）。<br>\n解法二：排序</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//解法一</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">numberOfPairs</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] points)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] pre = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">53</span>][<span class=\"number\">53</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] p:points)&#123;</span><br><span class=\"line\">            pre[p[<span class=\"number\">0</span>]+<span class=\"number\">1</span>][p[<span class=\"number\">1</span>]+<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=<span class=\"number\">50</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">50</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                pre[i+<span class=\"number\">1</span>][j+<span class=\"number\">1</span>] += pre[i][j+<span class=\"number\">1</span>]+pre[i+<span class=\"number\">1</span>][j+<span class=\"number\">2</span>]-pre[i][j+<span class=\"number\">2</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = points.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+<span class=\"number\">1</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> xi = points[i][<span class=\"number\">0</span>], yi = points[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> xj = points[j][<span class=\"number\">0</span>], yj = points[j][<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(xi&gt;xj || yi&lt;yj)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> temp = xi;</span><br><span class=\"line\">                    xi = xj;</span><br><span class=\"line\">                    xj = temp;</span><br><span class=\"line\">                    temp = yi;</span><br><span class=\"line\">                    yi = yj;</span><br><span class=\"line\">                    yj = temp;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(xi&lt;=xj &amp;&amp; yi&gt;=yj &amp;&amp; cal(xi,yi,xj,yj,pre) == <span class=\"number\">2</span>) ans++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> xi,<span class=\"keyword\">int</span> yi,<span class=\"keyword\">int</span> xj,<span class=\"keyword\">int</span> yj,<span class=\"keyword\">int</span>[][] pre)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pre[xj+<span class=\"number\">1</span>][yj+<span class=\"number\">1</span>]-pre[xi][yj+<span class=\"number\">1</span>]-pre[xj+<span class=\"number\">1</span>][yi+<span class=\"number\">2</span>]+pre[xi][yi+<span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题三\"><a class=\"markdownIt-Anchor\" href=\"#问题三\">#</a> 问题三</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-good-subarray-sum/\">3026. 最大好子数组和</a></p>\n<h3 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h3>\n<p>前缀和 + 贪心</p>\n<p>连续子数组的和一般可以考虑前缀和，满足右端点与左端点之差的绝对值等于 k 即 | nums [j]-nums [i]| == k，固定 nums [j]，则 nums [i] 可能的值有 2 个，nums [j]+k 或者 nums [j]-k，用哈希表维护以 nums [i] 结尾的子数组的最小前缀和即可。</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">maximumSubarraySum</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">long</span>[] pre = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n+<span class=\"number\">1</span>];</span><br><span class=\"line\">        Map&lt;Integer,Long&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        <span class=\"keyword\">long</span> ans = -Long.MIN_VALUE;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = nums[i];</span><br><span class=\"line\">            pre[i+<span class=\"number\">1</span>] += pre[i]+nums[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(map.containsKey(temp+k))&#123;</span><br><span class=\"line\">                ans = Math.max(ans,pre[i+<span class=\"number\">1</span>]-map.get(temp+k)+temp+k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(map.containsKey(temp-k))&#123;</span><br><span class=\"line\">                ans = Math.max(ans,pre[i+<span class=\"number\">1</span>]-map.get(temp-k)+temp-k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            map.merge(temp,pre[i+<span class=\"number\">1</span>],Long::min);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans==Long.MIN_VALUE?<span class=\"number\">0</span>:ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题四\"><a class=\"markdownIt-Anchor\" href=\"#问题四\">#</a> 问题四</h2>\n<p><a href=\"https://leetcode.cn/problems/find-the-number-of-ways-to-place-people-ii/\">3027. 人员站位的方案数 II</a></p>\n<h3 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h3>\n<p>与问题二类似<br>\n解法一：在问题二的解法一加上离散化即可</p>\n<p>解法二：同问题二解法二</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">numberOfPairs</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] points)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = points.length;</span><br><span class=\"line\">        Map&lt;Integer,Integer&gt; mapx = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        Map&lt;Integer,Integer&gt; mapy = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">        Set&lt;Integer&gt; xs = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        Set&lt;Integer&gt; ys = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] p:points)&#123;</span><br><span class=\"line\">            xs.add(p[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            ys.add(p[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        List&lt;Integer&gt; xl = <span class=\"keyword\">new</span> ArrayList(xs);</span><br><span class=\"line\">        List&lt;Integer&gt; yl = <span class=\"keyword\">new</span> ArrayList(ys);</span><br><span class=\"line\">        Collections.sort(xl);</span><br><span class=\"line\">        Collections.sort(yl);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> lm = xl.size(), ln = yl.size();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;xl.size();i++)&#123;</span><br><span class=\"line\">            mapx.put(xl.get(i),i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;yl.size();i++)&#123;</span><br><span class=\"line\">            mapy.put(yl.get(i),i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] pre = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[lm+<span class=\"number\">3</span>][ln+<span class=\"number\">3</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>[] p:points)&#123;</span><br><span class=\"line\">            pre[mapx.get(p[<span class=\"number\">0</span>])+<span class=\"number\">1</span>][mapy.get(p[<span class=\"number\">1</span>])+<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=lm;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=ln;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                pre[i+<span class=\"number\">1</span>][j+<span class=\"number\">1</span>] += pre[i][j+<span class=\"number\">1</span>]+pre[i+<span class=\"number\">1</span>][j+<span class=\"number\">2</span>]-pre[i][j+<span class=\"number\">2</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+<span class=\"number\">1</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> xi = mapx.get(points[i][<span class=\"number\">0</span>]), yi = mapy.get(points[i][<span class=\"number\">1</span>]);</span><br><span class=\"line\">                <span class=\"keyword\">int</span> xj = mapx.get(points[j][<span class=\"number\">0</span>]), yj = mapy.get(points[j][<span class=\"number\">1</span>]);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(xi&gt;xj || yi&lt;yj)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> temp = xi;</span><br><span class=\"line\">                    xi = xj;</span><br><span class=\"line\">                    xj = temp;</span><br><span class=\"line\">                    temp = yi;</span><br><span class=\"line\">                    yi = yj;</span><br><span class=\"line\">                    yj = temp;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(xi&lt;=xj &amp;&amp; yi&gt;=yj &amp;&amp; cal(xi,yi,xj,yj,pre) == <span class=\"number\">2</span>) ans++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> xi,<span class=\"keyword\">int</span> yi,<span class=\"keyword\">int</span> xj,<span class=\"keyword\">int</span> yj,<span class=\"keyword\">int</span>[][] pre)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pre[xj+<span class=\"number\">1</span>][yj+<span class=\"number\">1</span>]-pre[xi][yj+<span class=\"number\">1</span>]-pre[xj+<span class=\"number\">1</span>][yi+<span class=\"number\">2</span>]+pre[xi][yi+<span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "第123场双周赛"
            ]
        }
    ]
}